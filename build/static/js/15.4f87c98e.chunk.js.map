{"version":3,"sources":["pages/Profile.js"],"names":["Title","Text","Typography","TextArea","Input","ProfileCard","editMode","setEditMode","useState","portfolio","setPortfolio","loading","setLoading","uploadedVideos","setUploadedVideos","user","JSON","parse","localStorage","getItem","isCreator","role","id","useParams","formData","setFormData","cover_image","available","bio","social_links","platform","url","videos","useEffect","fetchPortfolio","async","response","api","get","tabFilter","user_id","_id","console","log","data","length","_portfolioData$availa","_portfolioData$social","portfolioData","error","message","_jsxs","className","children","style","background","concat","position","backgroundPosition","backgroundSize","_jsx","Upload","customRequest","info","file","status","reader","FileReader","readAsDataURL","onload","uploadFile","result","extension","name","split","pop","then","res","success","prev","_objectSpread","onSuccess","showUploadList","accept","Button","icon","UploadOutlined","bottom","right","Avatar","size","border","src","profile_picture","color","marginBottom","level","country","margin","Switch","checked","onChange","alt","width","display","gap","value","e","target","rows","placeholder","title","renderSocialLinks","iconMap","facebook","FacebookColorIcon","instagram","InstaColorIcon","linkedin","LinkedInColorIcon","twitter","TweeterColorIcon","Space","direction","map","link","index","prefix","newLinks","href","padding","video","Card","controls","height","objectFit","newVideos","Date","date","toLocaleDateString","Dragger","toISOString","InboxOutlined","type","SaveOutlined","EditOutlined","top","onClick","update","save"],"mappings":"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","file":"static/js/15.4f87c98e.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Avatar,\r\n  Card,\r\n  Image,\r\n  Space,\r\n  Switch,\r\n  Typography,\r\n  Button,\r\n  Input,\r\n  Upload,\r\n  message,\r\n} from \"antd\";\r\nimport {\r\n  FacebookOutlined,\r\n  InstagramOutlined,\r\n  LinkedinOutlined,\r\n  TwitterOutlined,\r\n  EditOutlined,\r\n  SaveOutlined,\r\n  UploadOutlined,\r\n  PlusOutlined,\r\n  InboxOutlined,\r\n} from \"@ant-design/icons\";\r\nimport {\r\n  FacebookColorIcon,\r\n  InstaColorIcon,\r\n  LinkedInColorIcon,\r\n  TweeterColorIcon,\r\n} from \"components/icons\";\r\nimport { api } from \"auth/FetchInterceptor\";\r\nimport Dragger from \"antd/lib/upload/Dragger\";\r\nimport { useParams } from \"react-router-dom/cjs/react-router-dom.min\";\r\n\r\nconst { Title, Text } = Typography;\r\nconst { TextArea } = Input;\r\n\r\nconst ProfileCard = () => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [portfolio, setPortfolio] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [uploadedVideos, setUploadedVideos] = useState([]);\r\n  const user = JSON.parse(localStorage.getItem(\"main_user\"));\r\n  const isCreator = user.role === \"Creator\";\r\n  const { id } = useParams();\r\n\r\n  // Form states\r\n  const [formData, setFormData] = useState({\r\n    cover_image: \"\",\r\n    available: true,\r\n    bio: \"\",\r\n    social_links: [\r\n      { platform: \"facebook\", url: \"\" },\r\n      { platform: \"instagram\", url: \"\" },\r\n      { platform: \"linkedin\", url: \"\" },\r\n      { platform: \"twitter\", url: \"\" },\r\n    ],\r\n    videos: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchPortfolio();\r\n  }, []);\r\n\r\n  const fetchPortfolio = async () => {\r\n    try {\r\n      const response = await api.get(\"Portfolios\", {\r\n        tabFilter: { user_id: isCreator ? user._id : id },\r\n      });\r\n\r\n      console.log(response);\r\n\r\n      if (response.data.data.length > 0) {\r\n        const portfolioData = response.data.data[0];\r\n        console.log(portfolioData);\r\n\r\n        setPortfolio(portfolioData);\r\n        setFormData({\r\n          cover_image: portfolioData.cover_image || \"\",\r\n          available: portfolioData.available ?? true,\r\n          bio: portfolioData.bio || \"\",\r\n          social_links: portfolioData.social_links?.length\r\n            ? portfolioData.social_links\r\n            : [\r\n                { platform: \"facebook\", url: \"\" },\r\n                { platform: \"instagram\", url: \"\" },\r\n                { platform: \"linkedin\", url: \"\" },\r\n                { platform: \"twitter\", url: \"\" },\r\n              ],\r\n          videos: portfolioData.videos || [],\r\n        });\r\n      }\r\n      setLoading(false);\r\n    } catch (error) {\r\n      message.error(\"Failed to fetch portfolio\");\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    try {\r\n      const portfolioData = {\r\n        user_id: user._id,\r\n        ...formData,\r\n      };\r\n\r\n      if (portfolio) {\r\n        await api.update(\"Portfolios\", {\r\n          _id: portfolio._id,\r\n          ...portfolioData,\r\n        }, portfolio._id);\r\n      } else {\r\n        await api.save(\"Portfolios\", portfolioData);\r\n      }\r\n\r\n      message.success(\"Portfolio saved successfully\");\r\n      setEditMode(false);\r\n      fetchPortfolio();\r\n    } catch (error) {\r\n      message.error(\"Failed to save portfolio\");\r\n    }\r\n  };\r\n\r\n  const handleUploadCover = async (info) => {\r\n    if (info.file.status === \"uploading\") {\r\n      return;\r\n    }\r\n\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(info.file);\r\n    reader.onload = () => {\r\n      api\r\n        .uploadFile(\"Users\", {\r\n          file: reader.result,\r\n          extension: info.file.name.split(\".\").pop(),\r\n        })\r\n        .then((res) => {\r\n          if (res.success) {\r\n            setFormData((prev) => ({\r\n              ...prev,\r\n              cover_image: res.url,\r\n            }));\r\n            info.onSuccess();\r\n          }\r\n        });\r\n    };\r\n  };\r\n\r\n  const handleUploadVideos = async (info) => {\r\n    if (info.file.status === \"uploading\") {\r\n      return;\r\n    }\r\n\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(info.file);\r\n    reader.onload = () => {\r\n      api\r\n        .uploadFile(\"Users\", {\r\n          file: reader.result,\r\n          extension: info.file.name.split(\".\").pop(),\r\n        })\r\n        .then((res) => {\r\n          if (res.success) {\r\n            setFormData((prev) => ({\r\n              ...prev,\r\n              videos: [\r\n                ...prev.videos,\r\n                {\r\n                  url: res.url,\r\n                  title: info.file.name,\r\n                  date: new Date().toISOString(),\r\n                },\r\n              ],\r\n            }));\r\n          }\r\n        });\r\n    };\r\n  };\r\n\r\n  const renderSocialLinks = () => {\r\n    const iconMap = {\r\n      facebook: <FacebookColorIcon />,\r\n      instagram: <InstaColorIcon />,\r\n      linkedin: <LinkedInColorIcon />,\r\n      twitter: <TweeterColorIcon />,\r\n    };\r\n\r\n    return (\r\n      <Space direction=\"vertical\" size=\"large\" style={{ width: \"100%\" }}>\r\n        {formData.social_links.map((link, index) =>\r\n          editMode ? (\r\n            <Input\r\n              key={index}\r\n              prefix={iconMap[link.platform]}\r\n              value={link.url}\r\n              onChange={(e) => {\r\n                const newLinks = [...formData.social_links];\r\n                newLinks[index].url = e.target.value;\r\n                setFormData((prev) => ({ ...prev, social_links: newLinks }));\r\n              }}\r\n              placeholder={`Enter your ${link.platform} URL`}\r\n            />\r\n          ) : (\r\n            <a\r\n              key={index}\r\n              href={link.url}\r\n              className=\"social-link\"\r\n              target=\"_blank\"\r\n            >\r\n              {iconMap[link.platform]}{\" \"}\r\n              {link.url || `https://www.${link.platform}.com/name`}\r\n            </a>\r\n          )\r\n        )}\r\n      </Space>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"profile-card\">\r\n      <div\r\n        className=\"background-image\"\r\n        style={{\r\n          background: `url(${\r\n            formData.cover_image ||\r\n            \"https://images.unsplash.com/photo-1736254329261-5595925b7e25?q=80&w=2874&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\"\r\n          })`,\r\n          position: \"relative\",\r\n          backgroundPosition: \"center\",\r\n          backgroundSize: \"cover\",\r\n        }}\r\n      >\r\n        <div className=\"overlay\"></div>\r\n        {editMode && (\r\n          <Upload\r\n            customRequest={handleUploadCover}\r\n            showUploadList={false}\r\n            accept=\"image/*\"\r\n          >\r\n            <Button\r\n              icon={<UploadOutlined />}\r\n              style={{\r\n                position: \"absolute\",\r\n                bottom: 20,\r\n                right: 20,\r\n              }}\r\n            >\r\n              Change Cover\r\n            </Button>\r\n          </Upload>\r\n        )}\r\n      </div>\r\n      <div className=\"content\">\r\n        <div className=\"profile-header\">\r\n          <Avatar\r\n            size={100}\r\n            style={{ border: \"1px solid white\" }}\r\n            src={user.profile_picture}\r\n          />\r\n          <div className=\"profile-info\">\r\n            <Title style={{ color: \"white\", marginBottom: 0 }} level={3}>\r\n              {user.name}\r\n            </Title>\r\n            <Text style={{ color: \"white\", marginBottom: \"6px\" }}>\r\n              {user.country}\r\n            </Text>\r\n          </div>\r\n        </div>\r\n        <div className=\"availability\" style={{ marginBottom: \"20px\" }}>\r\n          <Title style={{margin: 0}} level={4}>{editMode ? \"Are you available for new projects?\" : \"Is available for new projects?\"}</Title>\r\n          {editMode ? (\r\n            <Switch\r\n              checked={formData.available}\r\n              onChange={(checked) =>\r\n                setFormData((prev) => ({ ...prev, available: checked }))\r\n              }\r\n            />\r\n          ) : (\r\n            <img src={formData.available ? \"/img/tick.png\" : \"/img/cross.png\"} alt=\"availability\" style={{ width: 20 }} />\r\n          )}\r\n        </div>\r\n        <div style={{ display: \"flex\", gap: \"28px\" }}>\r\n          <div className=\"bio-section\" style={{ width: \"50%\" }}>\r\n            <Title level={4}>Creator Bio</Title>\r\n            {editMode ? (\r\n              <TextArea\r\n                value={formData.bio}\r\n                onChange={(e) =>\r\n                  setFormData((prev) => ({ ...prev, bio: e.target.value }))\r\n                }\r\n                rows={6}\r\n                placeholder=\"Enter your bio...\"\r\n              />\r\n            ) : (\r\n              <Text>{formData.bio}</Text>\r\n            )}\r\n          </div>\r\n          <div className=\"social-links\">\r\n            <Title level={4}>Social Links</Title>\r\n            <div title=\"Social Links\" className=\"social-card\">\r\n              {renderSocialLinks()}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"portfolio-grid\" style={{ padding: \"20px\" }}>\r\n        {formData.videos.map((video, index) => (\r\n          <Card key={index} className=\"portfolio-item\">\r\n            <div className=\"video-container\">\r\n              <video\r\n                src={video.url}\r\n                controls\r\n                style={{ width: \"100%\", height: \"100%\", objectFit: \"cover\" }}\r\n              />\r\n            </div>\r\n            <div className=\"video-info\">\r\n              {editMode ? (\r\n                <Input\r\n                  value={video.title}\r\n                  onChange={(e) => {\r\n                    const newVideos = [...formData.videos];\r\n                    newVideos[index].title = e.target.value;\r\n                    setFormData((prev) => ({ ...prev, videos: newVideos }));\r\n                  }}\r\n                />\r\n              ) : (\r\n                <h5>{video.title}</h5>\r\n              )}\r\n              <p>{new Date(video.date).toLocaleDateString()}</p>\r\n            </div>\r\n          </Card>\r\n        ))}\r\n      </div>\r\n\r\n      <div style={{\r\n        padding: 20,\r\n        width: '100%',\r\n      }}>\r\n      {editMode && (\r\n          <Dragger \r\n            customRequest={handleUploadVideos}\r\n            showUploadList={false}\r\n            accept=\"video/*\"\r\n          >\r\n            <p className=\"ant-upload-drag-icon\">\r\n              <InboxOutlined />\r\n            </p>\r\n            <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\r\n            <p className=\"ant-upload-hint\">\r\n              Please upload your videos here\r\n            </p>\r\n          </Dragger>\r\n        )}\r\n      </div>\r\n\r\n\r\n\r\n      {isCreator && (\r\n        <Button\r\n          type=\"primary\"\r\n          icon={editMode ? <SaveOutlined /> : <EditOutlined />}\r\n          style={{ position: \"absolute\", top: 20, right: 20 }}\r\n          onClick={editMode ? handleSave : () => setEditMode(true)}\r\n        >\r\n          {editMode ? \"Save\" : \"Edit\"}\r\n        </Button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileCard;\r\n"],"sourceRoot":""}