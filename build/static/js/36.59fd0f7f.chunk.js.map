{"version":3,"sources":["views/app-views/creators-dashboard/index.js"],"names":["Title","Text","Typography","CreatorDashboard","_contracts$","_contracts$$amount","_contracts$2","loading","setLoading","useState","contracts","setContracts","applications","setApplications","marketplaceProjects","setMarketplaceProjects","portfolioData","setPortfolioData","stats","setStats","totalEarnings","activeContracts","completedProjects","pendingPayouts","user","JSON","parse","localStorage","getItem","colors","navigateTo","path","window","location","href","useEffect","async","_contractsResponse$da","_applicationsResponse","_campaignsResponse$da","_portfolioResponse$da","contractsResponse","api","get","tabFilter","user_id","_id","applicationsResponse","campaignsResponse","limit","portfolioResponse","data","contractsData","reduce","sum","contract","amount","filter","status","length","payment_status","appliedCampaignIds","map","app","campaign_id","availableProjects","campaign","includes","error","console","fetchDashboardData","formatDate","dateString","Date","toLocaleDateString","_jsx","style","display","justifyContent","alignItems","height","children","Spin","size","portfolioCompleteness","calculatePortfolioCompleteness","Object","keys","score","totalFields","forEach","field","Math","round","proposalSuccessRate","calculateApplicationSuccessRate","hiredApplications","_jsxs","className","marginBottom","background","padding","borderRadius","level","color","name","type","Row","gutter","Col","xs","sm","md","Card","hoverable","bodyStyle","Statistic","title","value","precision","valueStyle","fontSize","prefix","DollarOutlined","suffix","marginTop","RiseOutlined","marginRight","toFixed","createdAt","ProjectOutlined","Button","paddingLeft","onClick","CheckCircleOutlined","concat","extra","ghost","List","itemLayout","dataSource","slice","renderItem","_contract$campaign","_contract$campaign2","_contract$campaign3","_contract$amount","Item","actions","icon","EyeOutlined","Meta","avatar","Avatar","src","product_brand_logo","border","fontWeight","campaign_name","description","brand_name","Tag","marginLeft","Empty","application","_application$campaign","_application$campaign2","_application$campaign3","_application$amount","relatedContract","find","c","application_id","strong","Progress","percent","strokeColor","completed","videos","action","rates","social_links","bio","item","project","Badge","count","StarOutlined","offset","video_type","campaign_budget"],"mappings":"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","file":"static/js/36.59fd0f7f.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { \r\n  Row, Col, Card, Statistic, Button, Progress, \r\n  Typography, Tag, List, Empty, Avatar, Badge, Spin, Space\r\n} from 'antd';\r\nimport { \r\n  DollarOutlined, ProjectOutlined, CheckCircleOutlined, \r\n  EyeOutlined, RiseOutlined, UserOutlined, StarOutlined\r\n} from '@ant-design/icons';\r\nimport { api } from 'auth/FetchInterceptor';\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nconst CreatorDashboard = () => {\r\n  // State for dynamic data\r\n  const [loading, setLoading] = useState(true);\r\n  const [contracts, setContracts] = useState([]);\r\n  const [applications, setApplications] = useState([]);\r\n  const [marketplaceProjects, setMarketplaceProjects] = useState([]);\r\n  const [portfolioData, setPortfolioData] = useState({});\r\n  const [stats, setStats] = useState({\r\n    totalEarnings: 0,\r\n    activeContracts: 0,\r\n    completedProjects: 0,\r\n    pendingPayouts: 0,\r\n  });\r\n\r\n  // Get user from localStorage for personalization\r\n  const user = JSON.parse(localStorage.getItem(\"main_user\") || '{\"name\":\"Creator\"}');\r\n\r\n  // Define a consistent color palette matching your theme\r\n  const colors = {\r\n    primary: '#fd5c02',\r\n    secondary: '#FC52E4',\r\n    success: '#4CAF50',\r\n    warning: '#faad14',\r\n    danger: '#F5222D',\r\n    info: '#1890ff',\r\n    text: '#2C3E50',\r\n    lightText: '#8392A5',\r\n    background: '#F8FAFC',\r\n  };\r\n\r\n  // Navigate to different pages\r\n  const navigateTo = (path) => {\r\n    window.location.href = path;\r\n  };\r\n\r\n  // Fetch dashboard data\r\n  useEffect(() => {\r\n    const fetchDashboardData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        // Fetch contracts\r\n        const contractsResponse = await api.get(\"Contracts\", {\r\n          tabFilter: { user_id: user._id }\r\n        });\r\n        \r\n        // Fetch applications\r\n        const applicationsResponse = await api.get(\"Applications\", {\r\n          tabFilter: { user_id: user._id }\r\n        });\r\n        \r\n        // Fetch marketplace projects (campaigns)\r\n        const campaignsResponse = await api.get(\"Campaigns\", {\r\n          limit: 100 // Get all available campaigns\r\n        });\r\n        \r\n        // Fetch portfolio data\r\n        const portfolioResponse = await api.get(\"Portfolios\", {\r\n          tabFilter: { user_id: user._id }\r\n        });\r\n        \r\n        // Process contracts data\r\n        if (contractsResponse?.data?.data) {\r\n          const contractsData = contractsResponse.data.data || [];\r\n          setContracts(contractsData);\r\n          \r\n          // Calculate stats\r\n          const totalEarnings = contractsData.reduce((sum, contract) => \r\n            sum + (contract.amount || 0), 0);\r\n          \r\n          const activeContracts = contractsData.filter(\r\n            contract => contract.status === 'In Progress'\r\n          ).length;\r\n          \r\n          const completedProjects = contractsData.filter(\r\n            contract => contract.status === 'Completed'\r\n          ).length;\r\n          \r\n          const pendingPayouts = contractsData\r\n            .filter(contract => \r\n              contract.status === 'Completed' && \r\n              contract.payment_status !== 'Paid'\r\n            )\r\n            .reduce((sum, contract) => sum + (contract.amount || 0), 0);\r\n          \r\n          setStats({\r\n            totalEarnings,\r\n            activeContracts,\r\n            completedProjects,\r\n            pendingPayouts\r\n          });\r\n        }\r\n        \r\n        // Process applications data\r\n        if (applicationsResponse?.data?.data) {\r\n          setApplications(applicationsResponse.data.data || []);\r\n        }\r\n        \r\n        // Process marketplace projects\r\n        if (campaignsResponse?.data?.data) {\r\n          // Filter out campaigns that the creator has already applied to\r\n          const appliedCampaignIds = applications.map(app => app.campaign_id);\r\n          \r\n          const availableProjects = campaignsResponse.data.data\r\n            .filter(campaign => !appliedCampaignIds.includes(campaign._id));\r\n            \r\n          setMarketplaceProjects(availableProjects);\r\n        }\r\n        \r\n        // Process portfolio data\r\n        if (portfolioResponse?.data?.data && portfolioResponse.data.data.length > 0) {\r\n          setPortfolioData(portfolioResponse.data.data[0]);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching dashboard data:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchDashboardData();\r\n  }, [user._id]);\r\n\r\n  // Format date\r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return 'N/A';\r\n    return new Date(dateString).toLocaleDateString();\r\n  };\r\n\r\n  // Calculate portfolio completeness score\r\n  const calculatePortfolioCompleteness = () => {\r\n    if (!portfolioData || Object.keys(portfolioData).length === 0) return 0;\r\n    \r\n    let score = 0;\r\n    let totalFields = 0;\r\n    \r\n    // Check all important portfolio fields\r\n    const fieldsToCheck = [\r\n      'bio', 'gender', 'age', 'country', 'available',\r\n      'social_links', 'portfolio_links', 'rates', 'videos'\r\n    ];\r\n    \r\n    fieldsToCheck.forEach(field => {\r\n      totalFields++;\r\n      \r\n      if (field === 'social_links' || field === 'portfolio_links') {\r\n        if (portfolioData[field] && portfolioData[field].length > 0) {\r\n          score++;\r\n        }\r\n      } else if (field === 'rates' || field === 'videos') {\r\n        if (portfolioData[field] && portfolioData[field].length > 0) {\r\n          score++;\r\n        }\r\n      } else if (portfolioData[field]) {\r\n        score++;\r\n      }\r\n    });\r\n    \r\n    return Math.round((score / totalFields) * 100);\r\n  };\r\n\r\n  // Calculate application success rate\r\n  const calculateApplicationSuccessRate = () => {\r\n    if (!applications || applications.length === 0) return 0;\r\n    \r\n    const hiredApplications = applications.filter(app => \r\n      app.status === 'Hired'\r\n    ).length;\r\n    \r\n    return Math.round((hiredApplications / applications.length) * 100);\r\n  };\r\n\r\n  // Loading state\r\n  if (loading) {\r\n    return (\r\n      <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '80vh' }}>\r\n        <Spin size=\"large\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Portfolio completeness and application success rate\r\n  const portfolioCompleteness = calculatePortfolioCompleteness();\r\n  const proposalSuccessRate = calculateApplicationSuccessRate();\r\n\r\n  return (\r\n    <div className=\"creator-dashboard\">\r\n      <div className=\"welcome-section\" style={{ marginBottom: 24, background: colors.background, padding: '24px', borderRadius: '8px' }}>\r\n        <Title level={3} style={{ color: colors.text, marginBottom: '8px' }}>Welcome back, {user.name}!</Title>\r\n        <Text type=\"secondary\">Here's an overview of your creator dashboard</Text>\r\n      </div>\r\n\r\n      {/* Statistics Cards */}\r\n      <Row gutter={[24, 24]}>\r\n        <Col xs={24} sm={12} md={6}>\r\n          <Card hoverable className=\"stat-card\" bodyStyle={{ padding: '24px' }}>\r\n            <Statistic\r\n              title={<span style={{ color: colors.lightText }}>Total Earnings</span>}\r\n              value={stats.totalEarnings}\r\n              precision={2}\r\n              valueStyle={{ color: colors.secondary, fontSize: '24px' }}\r\n              prefix={<DollarOutlined />}\r\n              suffix=\"USD\"\r\n            />\r\n            {contracts.length > 0 && (\r\n              <div style={{ marginTop: '12px', display: 'flex', alignItems: 'center' }}>\r\n                <RiseOutlined style={{ color: colors.success, marginRight: '4px' }} />\r\n                <Text type=\"secondary\" style={{ fontSize: '12px' }}>\r\n                  Latest: ${contracts[0]?.amount?.toFixed(2) || '0.00'} on {formatDate(contracts[0]?.createdAt)}\r\n                </Text>\r\n              </div>\r\n            )}\r\n          </Card>\r\n        </Col>\r\n        <Col xs={24} sm={12} md={6}>\r\n          <Card hoverable className=\"stat-card\" bodyStyle={{ padding: '24px' }}>\r\n            <Statistic\r\n              title={<span style={{ color: colors.lightText }}>Active Contracts</span>}\r\n              value={stats.activeContracts}\r\n              valueStyle={{ color: colors.primary, fontSize: '24px' }}\r\n              prefix={<ProjectOutlined />}\r\n            />\r\n            <div style={{ marginTop: '12px' }}>\r\n              <Button \r\n                type=\"link\" \r\n                style={{ paddingLeft: 0, fontSize: '12px' }}\r\n                onClick={() => navigateTo('/app/creators/all-contracts')}\r\n              >\r\n                View all contracts\r\n              </Button>\r\n            </div>\r\n          </Card>\r\n        </Col>\r\n        <Col xs={24} sm={12} md={6}>\r\n          <Card hoverable className=\"stat-card\" bodyStyle={{ padding: '24px' }}>\r\n            <Statistic\r\n              title={<span style={{ color: colors.lightText }}>Completed Projects</span>}\r\n              value={stats.completedProjects}\r\n              valueStyle={{ color: colors.success, fontSize: '24px' }}\r\n              prefix={<CheckCircleOutlined />}\r\n            />\r\n            <div style={{ marginTop: '12px', display: 'flex', alignItems: 'center' }}>\r\n              <RiseOutlined style={{ color: colors.success, marginRight: '4px' }} />\r\n              <Text type=\"secondary\" style={{ fontSize: '12px' }}>\r\n                {stats.completedProjects > 0 \r\n                  ? `${Math.round((stats.completedProjects / (stats.completedProjects + stats.activeContracts)) * 100)}% completion rate` \r\n                  : 'No completed projects yet'\r\n                }\r\n              </Text>\r\n            </div>\r\n          </Card>\r\n        </Col>\r\n        <Col xs={24} sm={12} md={6}>\r\n          <Card hoverable className=\"stat-card\" bodyStyle={{ padding: '24px' }}>\r\n            <Statistic\r\n              title={<span style={{ color: colors.lightText }}>Pending Payouts</span>}\r\n              value={stats.pendingPayouts}\r\n              precision={2}\r\n              valueStyle={{ color: colors.warning, fontSize: '24px' }}\r\n              prefix={<DollarOutlined />}\r\n              suffix=\"USD\"\r\n            />\r\n            <div style={{ marginTop: '12px' }}>\r\n              {stats.pendingPayouts > 0 ? (\r\n                <Text type=\"secondary\" style={{ fontSize: '12px' }}>\r\n                  Payments in processing\r\n                </Text>\r\n              ) : (\r\n                <Text type=\"secondary\" style={{ fontSize: '12px' }}>\r\n                  No pending payouts\r\n                </Text>\r\n              )}\r\n            </div>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row gutter={[24, 24]} style={{ marginTop: 24 }}>\r\n        <Col xs={24} md={16}>\r\n          <Card \r\n            title={<span style={{ color: colors.text }}>Recent Contracts</span>}\r\n            style={{ marginBottom: 24, borderRadius: '8px' }}\r\n            extra={\r\n              <Button \r\n                type=\"primary\" \r\n                ghost\r\n                onClick={() => navigateTo('/app/creators/all-contracts')}\r\n              >\r\n                View All\r\n              </Button>\r\n            }\r\n            bodyStyle={{ padding: contracts.length ? '0' : '24px' }}\r\n          >\r\n            {contracts.length > 0 ? (\r\n              <List\r\n                itemLayout=\"horizontal\"\r\n                dataSource={contracts.slice(0, 5)}\r\n                renderItem={contract => (\r\n                  <List.Item\r\n                    style={{ padding: '16px 24px' }}\r\n                    actions={[\r\n                      <Button \r\n                        type=\"link\" \r\n                        icon={<EyeOutlined />}\r\n                        onClick={() => navigateTo(`/app/creators/view-contract/${contract._id}`)}\r\n                      >\r\n                        View\r\n                      </Button>\r\n                    ]}\r\n                  >\r\n                    <List.Item.Meta\r\n                      avatar={\r\n                        <Avatar \r\n                          src={contract.campaign?.product_brand_logo}\r\n                          style={{ border: '2px solid #f0f0f0' }}\r\n                        />\r\n                      }\r\n                      title={<span style={{ fontWeight: 500 }}>{contract.campaign?.campaign_name || 'Unnamed Campaign'}</span>}\r\n                      description={\r\n                        <div>\r\n                          <div style={{ marginBottom: '4px' }}>Brand: {contract.campaign?.brand_name || 'Unknown'}</div>\r\n                          <div style={{ marginBottom: '4px' }}>Amount: <span style={{ fontWeight: 500 }}>${contract.amount?.toFixed(2) || '0.00'}</span></div>\r\n                          <Tag color={\r\n                            contract.status === 'Completed' ? 'green' : \r\n                            contract.status === 'In Progress' ? 'blue' : \r\n                            'default'\r\n                          }>\r\n                            {contract.status || 'Unknown'}\r\n                          </Tag>\r\n                          {contract.payment_status && (\r\n                            <Tag color={\r\n                              contract.payment_status === 'Paid' ? 'green' : \r\n                              contract.payment_status === 'Pending Release' ? 'orange' : \r\n                              'gold'\r\n                            } style={{ marginLeft: '5px' }}>\r\n                              {contract.payment_status}\r\n                            </Tag>\r\n                          )}\r\n                        </div>\r\n                      }\r\n                    />\r\n                  </List.Item>\r\n                )}\r\n              />\r\n            ) : (\r\n              <Empty \r\n                description={\r\n                  <div>\r\n                    <p>No contracts found</p>\r\n                    <Button \r\n                      type=\"primary\"\r\n                      onClick={() => navigateTo('/app/creators/marketplace')}\r\n                    >\r\n                      Browse Marketplace\r\n                    </Button>\r\n                  </div>\r\n                } \r\n              />\r\n            )}\r\n          </Card>\r\n          \r\n          <Card \r\n            title={<span style={{ color: colors.text }}>Your Applications</span>}\r\n            style={{ borderRadius: '8px' }}\r\n            extra={\r\n              <Button \r\n                type=\"primary\" \r\n                ghost\r\n                onClick={() => navigateTo('/app/creators/marketplace')}\r\n              >\r\n                Browse More\r\n              </Button>\r\n            }\r\n            bodyStyle={{ padding: applications.length ? '0' : '24px' }}\r\n          >\r\n            {applications.length > 0 ? (\r\n              <List\r\n                itemLayout=\"horizontal\"\r\n                dataSource={applications.slice(0, 5)}\r\n                renderItem={application => (\r\n                  <List.Item\r\n                    style={{ padding: '16px 24px' }}\r\n                    actions={[\r\n                      application.status === 'Hired' ? (\r\n                        <Button \r\n                          type=\"link\"\r\n                          onClick={() => {\r\n                            // Find the contract related to this application\r\n                            const relatedContract = contracts.find(c => \r\n                              c.application_id === application._id\r\n                            );\r\n                            \r\n                            if (relatedContract) {\r\n                              navigateTo(`/app/creators/view-contract/${relatedContract._id}`);\r\n                            } else {\r\n                              navigateTo('/app/creators/all-contracts');\r\n                            }\r\n                          }}\r\n                        >\r\n                          View Contract\r\n                        </Button>\r\n                      ) : (\r\n                        <Tag color={\r\n                          application.status === 'Shortlisted' ? 'blue' :\r\n                          application.status === 'Rejected' ? 'red' :\r\n                          'orange'\r\n                        }>\r\n                          {application.status}\r\n                        </Tag>\r\n                      )\r\n                    ]}\r\n                  >\r\n                    <List.Item.Meta\r\n                      avatar={\r\n                        <Avatar \r\n                          src={application.campaign?.product_brand_logo} \r\n                          style={{ border: '2px solid #f0f0f0' }}\r\n                        />\r\n                      }\r\n                      title={\r\n                        <span style={{ fontWeight: 500 }}>\r\n                          {application.campaign?.campaign_name || 'Unnamed Campaign'}\r\n                        </span>\r\n                      }\r\n                      description={\r\n                        <div>\r\n                          <div style={{ marginBottom: '4px' }}>\r\n                            Brand: {application.campaign?.brand_name || 'Unknown'}\r\n                          </div>\r\n                          <div style={{ marginBottom: '4px' }}>\r\n                            Your Quote: <span style={{ fontWeight: 500 }}>${application.amount?.toFixed(2) || '0.00'}</span>\r\n                          </div>\r\n                          <div>\r\n                            Applied on: {formatDate(application.createdAt)}\r\n                          </div>\r\n                        </div>\r\n                      }\r\n                    />\r\n                  </List.Item>\r\n                )}\r\n              />\r\n            ) : (\r\n              <Empty \r\n                description={\r\n                  <div>\r\n                    <p>No applications submitted yet</p>\r\n                    <Button \r\n                      type=\"primary\"\r\n                      onClick={() => navigateTo('/app/creators/marketplace')}\r\n                    >\r\n                      Browse Opportunities\r\n                    </Button>\r\n                  </div>\r\n                } \r\n              />\r\n            )}\r\n          </Card>\r\n        </Col>\r\n\r\n        <Col xs={24} md={8}>\r\n          <Card \r\n            title={<span style={{ color: colors.text }}>Profile Stats</span>}\r\n            style={{ marginBottom: 24, borderRadius: '8px' }}\r\n            bodyStyle={{ padding: '24px' }}\r\n          >\r\n            <div style={{ marginBottom: 24 }}>\r\n              <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: 8 }}>\r\n                <Text>Portfolio Completeness</Text>\r\n                <Text strong>{portfolioCompleteness}%</Text>\r\n              </div>\r\n              <Progress percent={portfolioCompleteness} strokeColor={colors.secondary} />\r\n              <div style={{ marginTop: 12 }}>\r\n                <Button \r\n                  type=\"primary\" \r\n                  ghost \r\n                  size=\"small\"\r\n                  onClick={() => navigateTo('/app/creators/portfolio')}\r\n                >\r\n                  Complete your portfolio\r\n                </Button>\r\n              </div>\r\n            </div>\r\n            \r\n            <div>\r\n              <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: 8 }}>\r\n                <Text>Proposal Success Rate</Text>\r\n                <Text strong>{proposalSuccessRate}%</Text>\r\n              </div>\r\n              <Progress percent={proposalSuccessRate} strokeColor={colors.primary} />\r\n              <div style={{ marginTop: 12 }}>\r\n                <Text type=\"secondary\" style={{ fontSize: '12px' }}>\r\n                  Improve your proposal success rate by applying to more relevant projects.\r\n                </Text>\r\n              </div>\r\n            </div>\r\n          </Card>\r\n          \r\n          <Card \r\n            title={<span style={{ color: colors.text }}>Portfolio Setup</span>}\r\n            style={{ marginBottom: 24, borderRadius: '8px' }}\r\n            bodyStyle={{ padding: '24px' }}\r\n          >\r\n            <List\r\n              itemLayout=\"horizontal\"\r\n              dataSource={[\r\n                {\r\n                  title: 'Upload Videos',\r\n                  description: 'Showcase your best work to brands',\r\n                  completed: portfolioData.videos && portfolioData.videos.length > 0,\r\n                  action: () => navigateTo('/app/creators/portfolio')\r\n                },\r\n                {\r\n                  title: 'Set Your Rates',\r\n                  description: 'Define your pricing structure',\r\n                  completed: portfolioData.rates && portfolioData.rates.length > 0,\r\n                  action: () => navigateTo('/app/creators/portfolio')\r\n                },\r\n                {\r\n                  title: 'Add Social Links',\r\n                  description: 'Connect your social media profiles',\r\n                  completed: portfolioData.social_links && portfolioData.social_links.length > 0,\r\n                  action: () => navigateTo('/app/creators/portfolio')\r\n                },\r\n                {\r\n                  title: 'Complete Bio',\r\n                  description: 'Tell brands about yourself',\r\n                  completed: !!portfolioData.bio,\r\n                  action: () => navigateTo('/app/creators/portfolio')\r\n                }\r\n              ]}\r\n              renderItem={item => (\r\n                <List.Item\r\n                  actions={[\r\n                    item.completed ? (\r\n                      <CheckCircleOutlined style={{ color: colors.success, fontSize: '20px' }} />\r\n                    ) : (\r\n                      <Button \r\n                        type=\"link\"\r\n                        onClick={item.action}\r\n                      >\r\n                        Complete\r\n                      </Button>\r\n                    )\r\n                  ]}\r\n                >\r\n                  <List.Item.Meta\r\n                    title={item.title}\r\n                    description={item.description}\r\n                  />\r\n                </List.Item>\r\n              )}\r\n            />\r\n          </Card>\r\n          \r\n          <Card \r\n            title={<span style={{ color: colors.text }}>Marketplace Opportunities</span>}\r\n            style={{ borderRadius: '8px' }}\r\n            extra={\r\n              <Button \r\n                type=\"primary\" \r\n                ghost\r\n                onClick={() => navigateTo('/app/creators/marketplace')}\r\n              >\r\n                Browse All\r\n              </Button>\r\n            }\r\n            bodyStyle={{ padding: marketplaceProjects.length ? '0' : '24px' }}\r\n          >\r\n            {marketplaceProjects.length > 0 ? (\r\n              <List\r\n                itemLayout=\"horizontal\"\r\n                dataSource={marketplaceProjects.slice(0, 3)}\r\n                renderItem={project => (\r\n                  <List.Item\r\n                    style={{ padding: '16px 24px' }}\r\n                    actions={[\r\n                      <Button \r\n                        type=\"link\" \r\n                        size=\"small\"\r\n                        onClick={() => navigateTo(`/app/creators/marketplace/view-project/${project._id}`)}\r\n                      >\r\n                        Details\r\n                      </Button>\r\n                    ]}\r\n                  >\r\n                    <List.Item.Meta\r\n                      avatar={\r\n                        <Badge count={<StarOutlined style={{ color: '#faad14' }} />} offset={[-5, 5]}>\r\n                          <Avatar \r\n                            src={project.product_brand_logo} \r\n                            style={{ border: '2px solid #f0f0f0' }}\r\n                          />\r\n                        </Badge>\r\n                      }\r\n                      title={\r\n                        <span style={{ fontWeight: 500 }}>\r\n                          {project.campaign_name || 'Unnamed Campaign'}\r\n                        </span>\r\n                      }\r\n                      description={\r\n                        <div>\r\n                          <div style={{ marginBottom: '4px' }}>Brand: {project.brand_name || 'Unknown'}</div>\r\n                          <div>\r\n                            <Tag color=\"blue\">{project.video_type || 'Video'}</Tag>\r\n                            {project.campaign_budget && \r\n                              <Tag color=\"green\">${project.campaign_budget}</Tag>\r\n                            }\r\n                          </div>\r\n                        </div>\r\n                      }\r\n                    />\r\n                  </List.Item>\r\n                )}\r\n              />\r\n            ) : (\r\n              <Empty description=\"No opportunities found\" />\r\n            )}\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreatorDashboard;"],"sourceRoot":""}