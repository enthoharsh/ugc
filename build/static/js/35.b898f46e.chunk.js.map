{"version":3,"sources":["views/app-views/admin-dashboard/index.js"],"names":["Title","Text","Typography","TabPane","Tabs","AdminDashboard","loading","setLoading","useState","users","setUsers","contracts","setContracts","campaigns","setCampaigns","stats","setStats","totalUsers","pendingVerifications","totalRevenue","pendingPayouts","activeContracts","colors","useEffect","async","_usersResponse$data","_contractsResponse$da","_campaignsResponse$da","usersResponse","api","get","contractsResponse","tabFilter","status","payment_status","$ne","campaignsResponse","data","usersData","filter","user","role","verified","length","prevStats","_objectSpread","contractsData","reduce","sum","contract","amount","error","console","fetchDashboardData","navigateTo","path","window","location","href","_jsx","className","style","display","justifyContent","alignItems","height","children","Spin","size","userColumns","title","key","render","_","_jsxs","Space","Avatar","src","profile_picture","icon","UserOutlined","backgroundColor","fontWeight","name","last_name","dataIndex","Tag","color","Button","type","EyeOutlined","onClick","paymentColumns","_contract$_id","copyable","_id","substring","_contract$user","_contract$user2","_contract$campaign","campaign","brand_name","concat","toFixed","marginBottom","background","padding","borderRadius","level","Row","gutter","Col","xs","sm","md","Card","hoverable","bodyStyle","Statistic","value","valueStyle","fontSize","prefix","TeamOutlined","marginTop","paddingLeft","FileProtectOutlined","precision","DollarOutlined","suffix","extra","ghost","Table","columns","dataSource","slice","rowKey","pagination","textAlign","c","strong","is_completed","Progress","percent","Math","min","round","max","strokeColor","u","List","split","renderItem","item","Item","Alert","message","description","showIcon","action","CheckCircleOutlined"],"mappings":"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","file":"static/js/35.b898f46e.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { \r\n  Typography, Card, Row, Col, Statistic, Button, Table, Tag, \r\n  Progress, Avatar, Space, List, Tabs, Spin, Alert\r\n} from 'antd';\r\nimport { \r\n  UserOutlined, FileProtectOutlined, CheckCircleOutlined, \r\n  EyeOutlined, BellOutlined, DollarOutlined, RiseOutlined, TeamOutlined\r\n} from '@ant-design/icons';\r\nimport { api } from 'auth/FetchInterceptor';\r\n\r\nconst { Title, Text } = Typography;\r\nconst { TabPane } = Tabs;\r\n\r\nconst AdminDashboard = () => {\r\n  // State for dynamic data\r\n  const [loading, setLoading] = useState(true);\r\n  const [users, setUsers] = useState([]);\r\n  const [contracts, setContracts] = useState([]);\r\n  const [campaigns, setCampaigns] = useState([]);\r\n  const [stats, setStats] = useState({\r\n    totalUsers: 0,\r\n    pendingVerifications: 0,\r\n    totalRevenue: 0,\r\n    pendingPayouts: 0,\r\n    activeContracts: 0\r\n  });\r\n\r\n  // Define a consistent color palette matching your theme\r\n  const colors = {\r\n    primary: '#fd5c02',\r\n    secondary: '#FC52E4',\r\n    success: '#4CAF50',\r\n    warning: '#faad14',\r\n    danger: '#F5222D',\r\n    info: '#1890ff',\r\n    text: '#2C3E50',\r\n    lightText: '#8392A5',\r\n    background: '#F8FAFC',\r\n  };\r\n\r\n  // Fetch all data for the dashboard\r\n  useEffect(() => {\r\n    const fetchDashboardData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        // Fetch users\r\n        const usersResponse = await api.get(\"Users\", {});\r\n        \r\n        // Fetch contracts\r\n        const contractsResponse = await api.get(\"Contracts\", {\r\n          tabFilter: { status: 'Completed', payment_status: { $ne: 'Paid' } }\r\n        });\r\n        \r\n        // Fetch campaigns\r\n        const campaignsResponse = await api.get(\"Campaigns\", {});\r\n        \r\n        // Process data\r\n        if (usersResponse?.data?.data) {\r\n          const usersData = usersResponse.data.data || [];\r\n          setUsers(usersData);\r\n          \r\n          // Calculate stats\r\n          const pendingVerifications = usersData.filter(user => \r\n            user.role === 'Creator' && user.verified === false\r\n          ).length;\r\n          \r\n          setStats(prevStats => ({\r\n            ...prevStats,\r\n            totalUsers: usersData.length,\r\n            pendingVerifications\r\n          }));\r\n        }\r\n        \r\n        if (contractsResponse?.data?.data) {\r\n          const contractsData = contractsResponse.data.data || [];\r\n          setContracts(contractsData);\r\n          \r\n          // Calculate revenue and payouts\r\n          const totalRevenue = contractsData.reduce(\r\n            (sum, contract) => sum + (contract.amount || 0),\r\n            0\r\n          );\r\n          \r\n          const pendingPayouts = contractsData\r\n            .filter(contract => contract.payment_status !== 'Paid')\r\n            .reduce((sum, contract) => sum + (contract.amount || 0), 0);\r\n            \r\n          const activeContracts = contractsData.filter(\r\n            contract => contract.status === 'In Progress'\r\n          ).length;\r\n          \r\n          setStats(prevStats => ({\r\n            ...prevStats,\r\n            totalRevenue,\r\n            pendingPayouts,\r\n            activeContracts\r\n          }));\r\n        }\r\n        \r\n        if (campaignsResponse?.data?.data) {\r\n          setCampaigns(campaignsResponse.data.data || []);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching dashboard data:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchDashboardData();\r\n  }, []);\r\n\r\n  // Format date\r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return 'N/A';\r\n    return new Date(dateString).toLocaleDateString();\r\n  };\r\n\r\n  // Navigate to different pages\r\n  const navigateTo = (path) => {\r\n    window.location.href = path;\r\n  };\r\n\r\n  // Render loading state\r\n  if (loading) {\r\n    return (\r\n      <div className=\"loading-container\" style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '80vh' }}>\r\n        <Spin size=\"large\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Recent users table columns\r\n  const userColumns = [\r\n    {\r\n      title: 'Name',\r\n      key: 'name',\r\n      render: (_, user) => (\r\n        <Space>\r\n          <Avatar src={user.profile_picture} icon={<UserOutlined />} \r\n            style={{ backgroundColor: user.role === 'Brand' ? colors.primary : colors.secondary }} />\r\n          <Text style={{ fontWeight: 500 }}>{user.name} {user.last_name || ''}</Text>\r\n        </Space>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Email',\r\n      dataIndex: 'email',\r\n      key: 'email',\r\n    },\r\n    {\r\n      title: 'Role',\r\n      dataIndex: 'role',\r\n      key: 'role',\r\n      render: role => (\r\n        <Tag color={role === 'Brand' ? colors.primary : role === 'Creator' ? colors.secondary : 'purple'}>\r\n          {role}\r\n        </Tag>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Status',\r\n      key: 'verified',\r\n      render: (_, user) => (\r\n        <Tag color={user.verified ? 'green' : 'red'}>\r\n          {user.verified ? 'Verified' : 'Unverified'}\r\n        </Tag>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Actions',\r\n      key: 'actions',\r\n      render: (_, user) => (\r\n        <Button \r\n          type=\"link\" \r\n          icon={<EyeOutlined />}\r\n          onClick={() => navigateTo(`/app/admin/users`)}\r\n        >\r\n          View\r\n        </Button>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  // Pending payments table columns\r\n  const paymentColumns = [\r\n    {\r\n      title: 'Contract ID',\r\n      key: 'id',\r\n      render: (_, contract) => <Text copyable>{contract._id?.substring(0, 8)}...</Text>,\r\n    },\r\n    {\r\n      title: 'Creator',\r\n      key: 'creator',\r\n      render: (_, contract) => (\r\n        <Space>\r\n          <Avatar src={contract.user?.profile_picture} icon={<UserOutlined />} />\r\n          <Text>{contract.user?.name || 'Unknown'}</Text>\r\n        </Space>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Brand',\r\n      key: 'brand',\r\n      render: (_, contract) => (\r\n        <Text>{contract.campaign?.brand_name || 'Unknown'}</Text>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Amount',\r\n      dataIndex: 'amount',\r\n      key: 'amount',\r\n      render: amount => `$${amount?.toFixed(2) || '0.00'}`,\r\n    },\r\n    {\r\n      title: 'Status',\r\n      key: 'payment_status',\r\n      render: (_, contract) => (\r\n        <Tag color={contract.payment_status === 'Pending Release' ? 'orange' : 'volcano'}>\r\n          {contract.payment_status || 'Pending'}\r\n        </Tag>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Actions',\r\n      key: 'actions',\r\n      render: (_, contract) => (\r\n        <Button \r\n          type=\"primary\" \r\n          size=\"small\"\r\n          onClick={() => navigateTo('/app/admin/contracts')}\r\n        >\r\n          Process\r\n        </Button>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"admin-dashboard\">\r\n      <div className=\"welcome-section\" style={{ marginBottom: 24, background: colors.background, padding: '24px', borderRadius: '8px' }}>\r\n        <Title level={3} style={{ color: colors.text, marginBottom: '8px' }}>Admin Dashboard</Title>\r\n        <Text type=\"secondary\">Manage platform users, contracts and payments</Text>\r\n      </div>\r\n\r\n      {/* Statistics Cards */}\r\n      <Row gutter={[24, 24]}>\r\n        <Col xs={24} sm={12} md={6}>\r\n          <Card hoverable className=\"stat-card\" bodyStyle={{ padding: '24px' }}>\r\n            <Statistic\r\n              title={<span style={{ color: colors.lightText }}>Total Users</span>}\r\n              value={stats.totalUsers}\r\n              valueStyle={{ color: colors.secondary, fontSize: '24px' }}\r\n              prefix={<TeamOutlined />}\r\n            />\r\n            <div style={{ marginTop: '12px' }}>\r\n              <Button \r\n                type=\"link\" \r\n                style={{ paddingLeft: 0, fontSize: '12px' }}\r\n                onClick={() => navigateTo('/app/admin/users')}\r\n              >\r\n                View all users\r\n              </Button>\r\n            </div>\r\n          </Card>\r\n        </Col>\r\n        <Col xs={24} sm={12} md={6}>\r\n          <Card hoverable className=\"stat-card\" bodyStyle={{ padding: '24px' }}>\r\n            <Statistic\r\n              title={<span style={{ color: colors.lightText }}>Pending Verifications</span>}\r\n              value={stats.pendingVerifications}\r\n              valueStyle={{ color: colors.warning, fontSize: '24px' }}\r\n              prefix={<FileProtectOutlined />}\r\n            />\r\n            <div style={{ marginTop: '12px' }}>\r\n              <Button \r\n                type=\"link\" \r\n                style={{ paddingLeft: 0, fontSize: '12px' }}\r\n                onClick={() => navigateTo('/app/admin/users')}\r\n              >\r\n                Review users\r\n              </Button>\r\n            </div>\r\n          </Card>\r\n        </Col>\r\n        <Col xs={24} sm={12} md={6}>\r\n          <Card hoverable className=\"stat-card\" bodyStyle={{ padding: '24px' }}>\r\n            <Statistic\r\n              title={<span style={{ color: colors.lightText }}>Total Revenue</span>}\r\n              value={stats.totalRevenue}\r\n              precision={2}\r\n              valueStyle={{ color: colors.success, fontSize: '24px' }}\r\n              prefix={<DollarOutlined />}\r\n              suffix=\"USD\"\r\n            />\r\n            <div style={{ marginTop: '12px' }}>\r\n              <Button \r\n                type=\"link\" \r\n                style={{ paddingLeft: 0, fontSize: '12px' }}\r\n                onClick={() => navigateTo('/app/admin/contracts')}\r\n              >\r\n                View details\r\n              </Button>\r\n            </div>\r\n          </Card>\r\n        </Col>\r\n        <Col xs={24} sm={12} md={6}>\r\n          <Card hoverable className=\"stat-card\" bodyStyle={{ padding: '24px' }}>\r\n            <Statistic\r\n              title={<span style={{ color: colors.lightText }}>Pending Payouts</span>}\r\n              value={stats.pendingPayouts}\r\n              precision={2}\r\n              valueStyle={{ color: colors.danger, fontSize: '24px' }}\r\n              prefix={<DollarOutlined />}\r\n              suffix=\"USD\"\r\n            />\r\n            <div style={{ marginTop: '12px' }}>\r\n              <Button \r\n                type=\"link\" \r\n                style={{ paddingLeft: 0, fontSize: '12px' }}\r\n                onClick={() => navigateTo('/app/admin/contracts')}\r\n              >\r\n                Process payments\r\n              </Button>\r\n            </div>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row gutter={[24, 24]} style={{ marginTop: 24 }}>\r\n        <Col xs={24} md={16}>\r\n          <Card \r\n            title={<span style={{ color: colors.text }}>Recent Users</span>}\r\n            style={{ marginBottom: 24, borderRadius: '8px' }}\r\n            extra={\r\n              <Button \r\n                type=\"primary\" \r\n                ghost\r\n                onClick={() => navigateTo('/app/admin/users')}\r\n              >\r\n                Manage All Users\r\n              </Button>\r\n            }\r\n            bodyStyle={{ padding: '0px' }}\r\n          >\r\n            {users.length > 0 ? (\r\n              <Table \r\n                columns={userColumns}\r\n                dataSource={users.slice(0, 5)}\r\n                rowKey=\"_id\"\r\n                pagination={false}\r\n                size=\"middle\"\r\n              />\r\n            ) : (\r\n              <div style={{ padding: '20px', textAlign: 'center' }}>No users found</div>\r\n            )}\r\n          </Card>\r\n          \r\n          <Card \r\n            title={<span style={{ color: colors.text }}>Pending Payments</span>}\r\n            style={{ borderRadius: '8px' }}\r\n            extra={\r\n              <Button \r\n                type=\"primary\" \r\n                ghost\r\n                onClick={() => navigateTo('/app/admin/contracts')}\r\n              >\r\n                View All Payments\r\n              </Button>\r\n            }\r\n            bodyStyle={{ padding: contracts.length === 0 ? '24px' : '0px' }}\r\n          >\r\n            {contracts.length > 0 ? (\r\n              <Table \r\n                columns={paymentColumns}\r\n                dataSource={contracts.filter(c => c.payment_status !== 'Paid').slice(0, 5)}\r\n                rowKey=\"_id\"\r\n                pagination={false}\r\n                size=\"middle\"\r\n              />\r\n            ) : (\r\n              <div style={{ padding: '20px', textAlign: 'center' }}>No pending payments</div>\r\n            )}\r\n          </Card>\r\n        </Col>\r\n\r\n        <Col xs={24} md={8}>\r\n          <Card \r\n            title={<span style={{ color: colors.text }}>Platform Status</span>}\r\n            style={{ marginBottom: 24, borderRadius: '8px' }}\r\n            bodyStyle={{ padding: '24px' }}\r\n          >\r\n            <div style={{ marginBottom: 24 }}>\r\n              <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: 8 }}>\r\n                <Text>Active Campaigns</Text>\r\n                <Text strong>{campaigns.filter(c => !c.is_completed).length}</Text>\r\n              </div>\r\n              <Progress \r\n                percent={Math.min(100, Math.round((campaigns.filter(c => !c.is_completed).length / Math.max(1, campaigns.length)) * 100))} \r\n                strokeColor={colors.primary}\r\n              />\r\n            </div>\r\n            \r\n            <div style={{ marginBottom: 24 }}>\r\n              <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: 8 }}>\r\n                <Text>Active Contracts</Text>\r\n                <Text strong>{stats.activeContracts}</Text>\r\n              </div>\r\n              <Progress \r\n                percent={Math.min(100, Math.round((stats.activeContracts / Math.max(1, contracts.length)) * 100))} \r\n                strokeColor={colors.secondary}\r\n              />\r\n            </div>\r\n            \r\n            <div>\r\n              <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: 8 }}>\r\n                <Text>Verified Creators</Text>\r\n                <Text strong>\r\n                  {users.filter(u => u.role === 'Creator' && u.verified).length} / {users.filter(u => u.role === 'Creator').length}\r\n                </Text>\r\n              </div>\r\n              <Progress \r\n                percent={Math.min(100, Math.round((users.filter(u => u.role === 'Creator' && u.verified).length / Math.max(1, users.filter(u => u.role === 'Creator').length)) * 100))} \r\n                strokeColor={colors.success}\r\n              />\r\n            </div>\r\n          </Card>\r\n          \r\n          <Card \r\n            title={<span style={{ color: colors.text }}>Quick Links</span>}\r\n            style={{ borderRadius: '8px' }}\r\n            bodyStyle={{ padding: '16px 24px' }}\r\n          >\r\n            <List\r\n              split={true}\r\n              renderItem={item => (\r\n                <List.Item style={{ padding: '12px 0' }}>\r\n                  {item}\r\n                </List.Item>\r\n              )}\r\n              dataSource={[\r\n                <div>\r\n                  <Button \r\n                    type=\"link\" \r\n                    icon={<UserOutlined />} \r\n                    style={{ paddingLeft: 0 }}\r\n                    onClick={() => navigateTo('/app/admin/users')}\r\n                  >\r\n                    Manage Users\r\n                  </Button>\r\n                  <div><Text type=\"secondary\">Approve or reject user accounts</Text></div>\r\n                </div>,\r\n                \r\n                <div>\r\n                  <Button \r\n                    type=\"link\" \r\n                    icon={<FileProtectOutlined />} \r\n                    style={{ paddingLeft: 0 }}\r\n                    onClick={() => navigateTo('/app/admin/contracts')}\r\n                  >\r\n                    Manage Contracts\r\n                  </Button>\r\n                  <div><Text type=\"secondary\">Process payments for completed contracts</Text></div>\r\n                </div>\r\n              ]}\r\n            />\r\n          </Card>\r\n\r\n          <Card \r\n            title={<span style={{ color: colors.text }}>System Notices</span>}\r\n            style={{ marginTop: 24, borderRadius: '8px' }}\r\n            bodyStyle={{ padding: '24px' }}\r\n          >\r\n            {stats.pendingVerifications > 0 && (\r\n              <Alert\r\n                message={`${stats.pendingVerifications} creator${stats.pendingVerifications !== 1 ? 's' : ''} awaiting verification`}\r\n                description=\"Review and approve creators to help them start earning\"\r\n                type=\"warning\"\r\n                showIcon\r\n                action={\r\n                  <Button \r\n                    size=\"small\" \r\n                    type=\"primary\"\r\n                    onClick={() => navigateTo('/app/admin/users')}\r\n                  >\r\n                    Review\r\n                  </Button>\r\n                }\r\n                style={{ marginBottom: 16 }}\r\n              />\r\n            )}\r\n            \r\n            {contracts.filter(c => c.payment_status === 'Pending Release').length > 0 && (\r\n              <Alert\r\n                message={`${contracts.filter(c => c.payment_status === 'Pending Release').length} payment${contracts.filter(c => c.payment_status === 'Pending Release').length !== 1 ? 's' : ''} ready for processing`}\r\n                description=\"Completed contracts awaiting payment release\"\r\n                type=\"info\"\r\n                showIcon\r\n                action={\r\n                  <Button \r\n                    size=\"small\" \r\n                    type=\"primary\"\r\n                    onClick={() => navigateTo('/app/admin/contracts')}\r\n                  >\r\n                    Process\r\n                  </Button>\r\n                }\r\n              />\r\n            )}\r\n            \r\n            {stats.pendingVerifications === 0 && contracts.filter(c => c.payment_status === 'Pending Release').length === 0 && (\r\n              <div style={{ textAlign: 'center', padding: '20px 0' }}>\r\n                <CheckCircleOutlined style={{ fontSize: 32, color: colors.success, marginBottom: 16 }} />\r\n                <div>\r\n                  <Text>All systems operational</Text>\r\n                </div>\r\n                <div>\r\n                  <Text type=\"secondary\">No pending actions required</Text>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;"],"sourceRoot":""}