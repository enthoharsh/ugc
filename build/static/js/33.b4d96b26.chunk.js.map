{"version":3,"sources":["pages/StripePaymentModal.js","pages/CampaignDetail.js"],"names":["stripePromise","loadStripe","PaymentForm","_ref","amount","onSuccess","onCancel","stripe","useStripe","elements","useElements","loading","setLoading","useState","error","setError","_jsxs","onSubmit","async","event","preventDefault","response","api","customRoute","clientSecret","result","confirmCardPayment","payment_method","card","getElement","CardElement","message","paymentIntent","err","style","margin","children","_jsx","Alert","description","type","marginBottom","padding","border","borderRadius","options","base","fontSize","color","invalid","display","justifyContent","gap","Button","onClick","disabled","htmlType","className","concat","StripePaymentModal","_ref2","visible","Modal","title","footer","width","centered","Elements","Title","Text","Typography","TabPane","Tabs","CampaignDetail","id","useParams","history","useHistory","campaignInfo","setCampaignInfo","applications","setApplications","contracts","setContracts","reload","setReload","Math","random","paymentModalVisible","setPaymentModalVisible","processingApplication","setProcessingApplication","formatDate","dateString","Date","toLocaleDateString","year","month","day","confirm","BottomTables","_selectedDetails$crea","_selectedDetails$crea2","_selectedDetails$crea3","_selectedDetails$crea4","drawerVisible","setDrawerVisible","selectedDetails","setSelectedDetails","activeTabKey","setActiveTabKey","columns","dataIndex","key","render","text","record","_record$created_by","_record$created_by2","_record$created_by3","Avatar","src","created_by","profile_picture","name","charAt","toUpperCase","length","substring","criterias","map","criteria","Tag","status","statusClass","obj","Space","size","_Fragment","icon","LikeFilled","LikeOutlined","applicationShortlist","_id","EyeFilled","cursor","CloseOutlined","applicationReject","resp","update","success","console","ContentTable","Table","dataSource","filter","item","toLowerCase","rowKey","pagination","pageSize","showSizeChanger","showTotal","total","range","tabItems","label","Drawer","placement","onClose","closeDrawer","deadline_date","tag","background","maxHeight","overflowY","cover_letter","Link","to","target","rel","marginTop","defaultActiveKey","onChange","tab","useEffect","campaignResp","getSingle","contractsResponse","get","tabFilter","campaign_id","applicationsResponse","data","getCampaignDetails","goBack","Spin","level","campaign_name","EyeOutlined","Row","gutter","contract","_contract$user","_contract$user2","_contract$user3","user","backgroundColor","end_date","payment_intent_id","save","application_id","user_id","start_date","timeline","brand_text","creator_text","date"],"mappings":"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","file":"static/js/33.b4d96b26.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Modal, Alert, Button, Space } from 'antd';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport { Elements, CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\r\nimport { api } from 'auth/FetchInterceptor';\r\n\r\n// Initialize Stripe with your publishable key\r\nconst stripePromise = loadStripe('pk_test_51QbWrHFfFMx3GxeO6G8C72ke4dJCj5x80YazKFT2onSW58h1j0MtrlHK0stjeW0ioejX1MRfpprS621z2m7DLMfh009uRSSWCH');\r\n\r\nconst PaymentForm = ({ amount, onSuccess, onCancel }) => {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    if (!stripe || !elements) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Create payment intent using your API interceptor\r\n      const response = await api.customRoute('createPaymentIntent', {\r\n        amount: amount\r\n      });\r\n\r\n      const { clientSecret } = response;\r\n\r\n      // Confirm the payment with Stripe\r\n      const result = await stripe.confirmCardPayment(clientSecret, {\r\n        payment_method: {\r\n          card: elements.getElement(CardElement),\r\n        },\r\n      });\r\n\r\n      if (result.error) {\r\n        setError(result.error.message);\r\n      } else {\r\n        onSuccess(result.paymentIntent);\r\n      }\r\n    } catch (err) {\r\n      setError('Payment failed. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} style={{ margin: '0 auto' }}>\r\n      {error && (\r\n        <Alert \r\n          message=\"Payment Error\" \r\n          description={error}\r\n          type=\"error\"\r\n          style={{ marginBottom: '16px' }} \r\n        />\r\n      )}\r\n      \r\n      <div style={{ \r\n        padding: '16px',\r\n        border: '1px solid #d9d9d9',\r\n        borderRadius: '6px',\r\n        marginBottom: '16px'\r\n      }}>\r\n        <CardElement options={{\r\n          style: {\r\n            base: {\r\n              fontSize: '16px',\r\n              color: '#424770',\r\n              '::placeholder': {\r\n                color: '#aab7c4',\r\n              },\r\n            },\r\n            invalid: {\r\n              color: '#9e2146',\r\n            },\r\n          },\r\n        }} />\r\n      </div>\r\n\r\n      <div style={{ \r\n        display: 'flex', \r\n        justifyContent: 'flex-end',\r\n        gap: '8px'\r\n      }}>\r\n        <Button\r\n          onClick={onCancel}\r\n          disabled={loading}\r\n        >\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          type=\"primary\"\r\n          htmlType=\"submit\"\r\n          loading={loading}\r\n          disabled={!stripe}\r\n          className=\"primary-solid-button\"\r\n        >\r\n          {loading ? 'Processing...' : `Pay $${amount}`}\r\n        </Button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst StripePaymentModal = ({ visible, amount, onSuccess, onCancel }) => {\r\n  return (\r\n    <Modal\r\n      title=\"Complete Payment\"\r\n      visible={visible}\r\n      onCancel={onCancel}\r\n      footer={null}\r\n      width={600}\r\n      centered\r\n    >\r\n      <Elements stripe={stripePromise}>\r\n        <PaymentForm \r\n          amount={amount}\r\n          onSuccess={onSuccess}\r\n          onCancel={onCancel}\r\n        />\r\n      </Elements>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default StripePaymentModal;","import React, { useEffect, useState } from \"react\";\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { Card, Drawer, Button, Row, Col, Tag, Typography, Avatar, message, Modal, Spin } from \"antd\";\r\nimport {\r\n  EyeOutlined,\r\n  EyeFilled,\r\n  CloseOutlined,\r\n  LikeFilled,\r\n  LikeOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Link } from \"react-router-dom/cjs/react-router-dom\";\r\nimport { Table, Space, Tabs } from \"antd\";\r\nimport { api } from \"auth/FetchInterceptor\";\r\nimport StripePaymentModal from './StripePaymentModal';\r\n\r\nconst { Title, Text } = Typography;\r\nconst { TabPane } = Tabs;\r\n\r\nconst CampaignDetail = () => {\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n  const [campaignInfo, setCampaignInfo] = useState({});\r\n  const [applications, setApplications] = useState([]);\r\n  const [contracts, setContracts] = useState([]);\r\n  const [reload, setReload] = useState(Math.random());\r\n  const [paymentModalVisible, setPaymentModalVisible] = useState(false);\r\n  const [processingApplication, setProcessingApplication] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Format date nicely\r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return 'N/A';\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString('en-US', {\r\n      year: 'numeric',\r\n      month: 'short',\r\n      day: 'numeric'\r\n    });\r\n  };\r\n\r\n  // Calculate total videos needed from videos_from_creator object\r\n  const calculateTotalVideos = (videosObj) => {\r\n    if (!videosObj) return \"Not specified\";\r\n    \r\n    const result = [];\r\n    Object.entries(videosObj).forEach(([duration, details]) => {\r\n      if (details.quantity && details.quantity > 0) {\r\n        result.push(`${duration}s x${details.quantity}`);\r\n      }\r\n    });\r\n    \r\n    return result.length > 0 ? result.join(\", \") : \"None\";\r\n  };\r\n\r\n  const handlePaymentSuccess = async (paymentIntent) => {\r\n    try {\r\n      if (!processingApplication) return;\r\n      \r\n      const resp = await api.update(\"Applications\", { \r\n        status: 'Hired',\r\n        payment_intent_id: paymentIntent.id \r\n      }, processingApplication._id);\r\n  \r\n      if (resp.success) {\r\n        await api.save(\"Contracts\", {\r\n          campaign_id: id,\r\n          application_id: processingApplication._id,\r\n          user_id: processingApplication.user_id,\r\n          start_date: new Date(),\r\n          end_date: new Date(processingApplication.deadline_date),\r\n          amount: processingApplication.amount,\r\n          status: 'In Progress',\r\n          payment_intent_id: paymentIntent.id,\r\n          timeline: [\r\n            { \r\n              type: \"contract_started\", \r\n              data: { \r\n                brand_text: \"You started the contract\", \r\n                creator_text: \"Brand started the contract\",\r\n                date: new Date(), \r\n                amount: processingApplication.amount \r\n              } \r\n            }\r\n          ],\r\n        });\r\n  \r\n        message.success('Payment completed and creator hired successfully!');\r\n        setReload(Math.random());\r\n      } else {\r\n        message.error(resp.message || 'Failed to update application');\r\n      }\r\n    } catch (error) {\r\n      console.error('Contract creation error:', error);\r\n      message.error('Failed to create contract. Please try again.');\r\n    } finally {\r\n      setPaymentModalVisible(false);\r\n      setProcessingApplication(null);\r\n    }\r\n  };\r\n\r\n  const { confirm } = Modal;\r\n\r\n  const BottomTables = () => {\r\n    const [drawerVisible, setDrawerVisible] = useState(false);\r\n    const [selectedDetails, setSelectedDetails] = useState(null);\r\n    const [activeTabKey, setActiveTabKey] = useState(\"all\");\r\n\r\n    const showDrawer = (details) => {\r\n      setSelectedDetails(details);\r\n      setDrawerVisible(true);\r\n    };\r\n\r\n    const closeDrawer = () => {\r\n      setDrawerVisible(false);\r\n      setSelectedDetails(null);\r\n    };\r\n\r\n    const columns = [\r\n      {\r\n        title: \"Name\",\r\n        dataIndex: \"name\",\r\n        width: \"20%\",\r\n        key: \"name\",\r\n        render: (text, record) => (\r\n          <div className=\"name-container\">\r\n            <Avatar \r\n              src={record.created_by?.profile_picture} \r\n              className=\"avatar-style\"\r\n            >\r\n              {record.created_by?.name ? \r\n                record.created_by.name.charAt(0).toUpperCase() : 'U'}\r\n            </Avatar>\r\n            <div className=\"name-details\">\r\n              <div className=\"name-text\">{record.created_by?.name || 'Unknown User'}</div>\r\n            </div>\r\n          </div>\r\n        ),\r\n      },\r\n      {\r\n        title: \"Quote\",\r\n        dataIndex: \"amount\",\r\n        width: \"10%\",\r\n        key: \"amount\",\r\n        render: (text) => <span>$ {text}</span>,\r\n      },\r\n      {\r\n        title: \"Details\",\r\n        dataIndex: \"cover_letter\",\r\n        width: \"28%\",\r\n        key: \"cover_letter\",\r\n        render: (text) => (\r\n          <span>{text ? (text.length > 50 ? text.substring(0, 50) + \"...\" : text) : 'No details provided'}</span>\r\n        ),\r\n      },\r\n      {\r\n        title: \"Criteria\",\r\n        key: \"criterias\",\r\n        dataIndex: \"criterias\",\r\n        width: \"35%\",\r\n        render: (criterias) => (\r\n          <div className=\"criteria-container\">\r\n            {(criterias || []).map((criteria) => (\r\n              <Tag key={criteria} className=\"criteria-tag\">\r\n                {criteria}\r\n              </Tag>\r\n            ))}\r\n          </div>\r\n        ),\r\n      },\r\n      {\r\n        title: \"Status\",\r\n        key: \"status\",\r\n        width: \"10%\",\r\n        dataIndex: \"status\",\r\n        render: (status) => {\r\n          let statusClass = \"status-default\";\r\n          if (status === \"Hired\") statusClass = \"status-hired\";\r\n          if (status === \"Shortlisted\") statusClass = \"status-shortlisted\";\r\n          if (status === \"Rejected\") statusClass = \"status-rejected\";\r\n          if (status === \"Applied\") statusClass = \"status-applied\";\r\n\r\n          return <span className={`status-badge ${statusClass}`}>{status}</span>;\r\n        },\r\n      },\r\n      {\r\n        title: \"\",\r\n        key: \"action\",\r\n        width: \"17%\",\r\n        render: (obj) => (\r\n          <Space size=\"middle\" className=\"action-container\">\r\n            {obj.status !== 'Hired' && (\r\n              <>\r\n                <Button \r\n                  type=\"text\" \r\n                  icon={obj.status === 'Shortlisted' ? <LikeFilled style={{ color: \"#16a34a\" }} /> : <LikeOutlined />} \r\n                  onClick={() => applicationShortlist(obj._id)}\r\n                />\r\n              </>\r\n            )}\r\n            <>\r\n              <Button\r\n                type=\"text\"\r\n                icon={<EyeFilled />}\r\n                onClick={() => showDrawer(obj)}\r\n                style={{ cursor: \"pointer\" }}\r\n              />\r\n            </>\r\n            {obj.status !== 'Hired' && (\r\n              <>\r\n                <Button \r\n                  type=\"text\" \r\n                  icon={<CloseOutlined style={{ color: \"red\" }} />} \r\n                  onClick={() => applicationReject(obj._id)}\r\n                />\r\n              </>\r\n            )}\r\n          </Space>\r\n        ),\r\n      },\r\n    ];\r\n\r\n    const applicationReject = async (_id) => {\r\n      try {\r\n        const resp = await api.update(\"Applications\", { status: 'Rejected' }, _id);\r\n        if (resp.success) {\r\n          message.success('Application rejected successfully');\r\n          setReload(Math.random());\r\n        } else {\r\n          message.error(resp.message || 'Failed to reject application');\r\n        }\r\n      } catch (error) {\r\n        console.error('Application reject error:', error);\r\n        message.error('Failed to reject application');\r\n      }\r\n    };\r\n\r\n    const applicationShortlist = async (_id) => {\r\n      try {\r\n        const resp = await api.update(\"Applications\", { status: 'Shortlisted' }, _id);\r\n        if (resp.success) {\r\n          message.success('Application shortlisted successfully');\r\n          setReload(Math.random());\r\n        } else {\r\n          message.error(resp.message || 'Failed to shortlist application');\r\n        }\r\n      } catch (error) {\r\n        console.error('Application shortlist error:', error);\r\n        message.error('Failed to shortlist application');\r\n      }\r\n    };\r\n\r\n    const onTabChange = (key) => {\r\n      setActiveTabKey(key);\r\n    };\r\n\r\n    const ContentTable = () => {\r\n      return (\r\n        <Table\r\n          columns={columns}\r\n          dataSource={applications.filter((item) => {\r\n            if (activeTabKey === 'all') return true;\r\n            return item.status.toLowerCase() === activeTabKey.toLowerCase();\r\n          })}\r\n          rowKey=\"_id\"\r\n          pagination={applications.length > 10 ? {\r\n            pageSize: 10,\r\n            showSizeChanger: true,\r\n            showTotal: (total, range) => `${range[0]}-${range[1]} of ${total} applications`,\r\n          } : false}\r\n          loading={loading}\r\n        />\r\n      );\r\n    };\r\n\r\n    const tabItems = [\r\n      {\r\n        key: \"all\",\r\n        label: (\r\n          <>\r\n            All<span className=\"ml-2 status-badge status-default\">{applications.length}</span>\r\n          </>\r\n        ),\r\n      },\r\n      {\r\n        key: \"applied\",\r\n        label: (\r\n          <>\r\n            Applied<span className=\"ml-2 status-badge status-applied\">\r\n              {applications.filter((item) => item.status === \"Applied\").length}\r\n            </span>\r\n          </>\r\n        ),\r\n      },\r\n      {\r\n        key: \"shortlisted\",\r\n        label: (\r\n          <>\r\n            Shortlisted\r\n            <span className=\"ml-2 text-blue-600 status-badge status-shortlisted\">\r\n              {applications.filter((item) => item.status === \"Shortlisted\").length}\r\n            </span>\r\n          </>\r\n        ),\r\n      },\r\n      {\r\n        key: \"hired\",\r\n        label: (\r\n          <>\r\n            Hired\r\n            <span className=\"ml-2 text-green-600 status-badge status-hired\">\r\n              {applications.filter((item) => item.status === \"Hired\").length}\r\n            </span>\r\n          </>\r\n        ),\r\n      },\r\n      {\r\n        key: \"rejected\",\r\n        label: (\r\n          <>\r\n            Rejected\r\n            <span className=\"ml-2 text-red-600 status-badge status-rejected\">\r\n              {applications.filter((item) => item.status === \"Rejected\").length}\r\n            </span>\r\n          </>\r\n        ),\r\n      },\r\n    ];\r\n\r\n    return (\r\n      <div className=\"p-4 campaign-detail-tables\">\r\n        <Drawer\r\n          title={null}\r\n          placement=\"right\"\r\n          onClose={closeDrawer}\r\n          visible={drawerVisible}\r\n          width={450}\r\n          className=\"custom-drawer\"\r\n        >\r\n          {selectedDetails && (\r\n            <div>\r\n              <span\r\n                className={`status-badge status-${selectedDetails.status.toLowerCase()}`}\r\n                style={{ display: \"inline-block\", marginBottom: \"16px\" }}\r\n              >\r\n                {selectedDetails.status}\r\n              </span>\r\n              {/* User Details */}\r\n              <div className=\"name-container mt-4 mb-3\">\r\n                <Avatar\r\n                  src={selectedDetails.created_by?.profile_picture}\r\n                  className=\"avatar-style\"\r\n                >\r\n                  <span className=\"avatar-text\">\r\n                    {selectedDetails.created_by?.name ? selectedDetails.created_by.name.charAt(0).toUpperCase() : 'U'}\r\n                  </span>\r\n                </Avatar>\r\n                <div className=\"name-details\">\r\n                  <div className=\"name-text\">{selectedDetails.created_by?.name || 'Unknown User'}</div>\r\n                </div>\r\n              </div>\r\n              <div className=\"mb-3\" style={{ display: \"flex\", gap: \"10px\" }}>\r\n                <div style={{ width: \"20%\" }}>Quote:</div>\r\n                <div style={{ width: \"80%\" }}>$ {selectedDetails.amount}</div>\r\n              </div>\r\n              <div className=\"mb-3\" style={{ display: \"flex\", gap: \"10px\" }}>\r\n                <div style={{ width: \"20%\" }}>Proposed Deadline:</div>\r\n                <div style={{ width: \"80%\" }}>\r\n                  {selectedDetails.deadline_date ? formatDate(selectedDetails.deadline_date) : 'Not specified'}\r\n                </div>\r\n              </div>\r\n              <div className=\"mb-3\" style={{ display: \"flex\", gap: \"10px\" }}>\r\n                <div style={{ width: \"20%\" }}>Criteria:</div>\r\n                <div style={{ width: \"80%\" }}>\r\n                  <div className=\"criteria-container\">\r\n                    {(selectedDetails.criterias || []).map((tag) => (\r\n                      <Tag key={tag} className=\"criteria-tag\">\r\n                        {tag}\r\n                      </Tag>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"mb-3\" style={{ display: \"flex\", gap: \"10px\" }}>\r\n                <div style={{ width: \"20%\" }}>Details:</div>\r\n                <div style={{ width: \"80%\" }}>\r\n                  <p style={{\r\n                    border: \"1px solid #f0f0f0\",\r\n                    padding: \"8px\",\r\n                    borderRadius: \"4px\",\r\n                    background: \"#fafafa\",\r\n                    maxHeight: \"200px\",\r\n                    overflowY: \"auto\",\r\n                  }}>\r\n                    {selectedDetails.cover_letter || 'No additional details provided'}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"mb-3\" style={{ display: \"flex\", gap: \"10px\" }}>\r\n                <div style={{ width: \"20%\" }}>Portfolio:</div>\r\n                <div style={{ width: \"80%\" }}>\r\n                  <Link\r\n                    to={'/app/brands/portfolio/' + selectedDetails.created_by?._id}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                    className=\"portfolio-link\"\r\n                  >\r\n                    View Profile ↗\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Action Buttons */}\r\n              {selectedDetails.status !== 'Hired' && (\r\n                <div style={{ marginTop: \"24px\", display: \"flex\", gap: \"12px\" }}>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    style={{ background: \"#f97316\", border: \"none\" }}\r\n                    onClick={() => {\r\n                      setProcessingApplication(selectedDetails);\r\n                      setPaymentModalVisible(true);\r\n                    }}\r\n                  >\r\n                    Hire\r\n                  </Button>\r\n                  <Button\r\n                    type=\"default\"\r\n                    style={{ background: \"#e0f2fe\", color: \"#0284c7\" }}\r\n                    onClick={() => applicationShortlist(selectedDetails._id)}\r\n                  >\r\n                    Shortlist\r\n                  </Button>\r\n                  <Button\r\n                    type=\"default\"\r\n                    style={{ background: \"#fee2e2\", color: \"#b91c1c\" }}\r\n                    onClick={() => applicationReject(selectedDetails._id)}\r\n                  >\r\n                    Reject\r\n                  </Button>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </Drawer>\r\n        <Tabs\r\n          defaultActiveKey=\"all\"\r\n          onChange={onTabChange}\r\n        >\r\n          {tabItems.map((item) => (\r\n            <TabPane tab={item.label} key={item.key}>\r\n              <ContentTable />\r\n            </TabPane>\r\n          ))}\r\n        </Tabs>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const getCampaignDetails = async () => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      // Get campaign details\r\n      const campaignResp = await api.getSingle('Campaigns', { _id: id });\r\n      \r\n      // Get contracts for this campaign\r\n      const contractsResponse = await api.get('Contracts', {\r\n        tabFilter: { campaign_id: id }\r\n      });\r\n      \r\n      // Get applications for this campaign\r\n      const applicationsResponse = await api.get('Applications', {\r\n        tabFilter: { campaign_id: id }\r\n      });\r\n      \r\n      if (campaignResp && campaignResp.data) {\r\n        setCampaignInfo(campaignResp.data);\r\n      }\r\n      \r\n      if (contractsResponse && contractsResponse.data) {\r\n        setContracts(contractsResponse.data.data || []);\r\n      }\r\n      \r\n      if (applicationsResponse && applicationsResponse.data) {\r\n        setApplications(applicationsResponse.data.data || []);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching campaign details:', error);\r\n      message.error('Failed to load campaign data');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      getCampaignDetails();\r\n    } else {\r\n      history.goBack();\r\n    }\r\n  }, [id, reload]);\r\n\r\n  if (loading && !campaignInfo._id) {\r\n    return <div className=\"loading-container\"><Spin size=\"large\" /></div>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"campaign-container\">\r\n        <div className=\"campaign-header\">\r\n          <Title level={2}>\r\n            {campaignInfo.campaign_name || 'Campaign Details'}\r\n          </Title>\r\n          <Link to={`campaign-info/${id}`}>\r\n            <Button className=\"secondary-color-btn\">\r\n              <span>View Campaign Info</span> <EyeOutlined />\r\n            </Button>\r\n          </Link>\r\n        </div>\r\n        <Text className=\"breadcrumb\">\r\n          Campaigns<span className=\"mx-2\">•</span> All Campaigns<span className=\"mx-2\">•</span> \r\n          <span className=\"prm-color\">{campaignInfo.campaign_name || 'Campaign Details'}</span>\r\n        </Text>\r\n        \r\n        {/* Display hired creators */}\r\n        <Row gutter={[24, 24]} className=\"project-grid\">\r\n          {contracts.length > 0 ? (\r\n            contracts.map((contract) => (\r\n              <div\r\n                className=\"project-card\"\r\n                style={{ display: \"flex\" }}\r\n                key={contract._id}\r\n              >\r\n                <div\r\n                  style={{\r\n                    width: \"23%\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                  }}\r\n                >\r\n                  <Avatar \r\n                    src={contract.user?.profile_picture} \r\n                    size={50}\r\n                    style={{ backgroundColor: '#f56a00' }}\r\n                  >\r\n                    {contract.user?.name ? contract.user.name.charAt(0).toUpperCase() : 'U'}\r\n                  </Avatar>\r\n                </div>\r\n                <div style={{ width: \"77%\" }}>\r\n                  <div\r\n                    style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                  >\r\n                    <span>\r\n                      <Tag color=\"green\" className=\"status-tag\">\r\n                        {contract.status || 'Hired'}\r\n                      </Tag>\r\n                    </span>\r\n                    <span>\r\n                      <Text className=\"price\">\r\n                        ${contract.amount}\r\n                      </Text>\r\n                    </span>\r\n                  </div>\r\n                  <div>\r\n                    <Text className=\"name mt-2 mb-2\">{contract.user?.name || 'Creator'}</Text>\r\n                    <Text className=\"deadline d-block mb-2\">\r\n                      Deadline: {contract.end_date ? formatDate(contract.end_date) : 'Not specified'}\r\n                    </Text>\r\n                    <Link to={\"view-project/\" + contract._id} className=\"view-project-btn\">\r\n                      View Project\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <div className=\"no-contracts-message\">\r\n              No creators hired yet. Review applications below to hire creators.\r\n            </div>\r\n          )}\r\n        </Row>\r\n      </div>\r\n      \r\n      {/* Applications table */}\r\n      <BottomTables />\r\n      \r\n      {/* Payment modal */}\r\n      <StripePaymentModal\r\n        visible={paymentModalVisible}\r\n        amount={processingApplication?.amount || 0}\r\n        onSuccess={handlePaymentSuccess}\r\n        onCancel={() => {\r\n          setPaymentModalVisible(false);\r\n          setProcessingApplication(null);\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CampaignDetail;"],"sourceRoot":""}