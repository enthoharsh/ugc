{"version":3,"sources":["../node_modules/lodash/isEqual.js","views/app-views/admin-users/index.js"],"names":["baseIsEqual","require","module","exports","value","other","Option","Select","AdminUsers","users","setUsers","useState","loading","setLoading","editModalVisible","setEditModalVisible","currentUser","setCurrentUser","search","setSearch","roleFilter","setRoleFilter","fetchUsers","async","response","api","get","data","error","message","console","useEffect","handleVerificationChange","update","_id","verified","success","concat","filteredUsers","filter","user","_user$name","_user$email","matchesSearch","name","toLowerCase","includes","email","matchesRole","role","columns","title","dataIndex","key","render","text","record","_jsxs","children","last_name","_jsx","Tag","color","Space","size","Button","type","icon","EditOutlined","onClick","className","style","marginBottom","display","gap","Input","placeholder","prefix","SearchOutlined","onChange","e","target","width","defaultValue","Table","dataSource","rowKey","Modal","visible","onCancel","footer","marginTop","justifyContent","danger"],"mappings":"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","file":"static/js/27.cc362c2b.chunk.js","sourcesContent":["var baseIsEqual = require('./_baseIsEqual');\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;\n","import React, { useState, useEffect } from 'react';\r\nimport { Table, Tag, Space, Button, Modal, Switch, message, Input, Select } from 'antd';\r\nimport { EditOutlined, SearchOutlined } from '@ant-design/icons';\r\nimport { api } from 'auth/FetchInterceptor';\r\n\r\nconst { Option } = Select;\r\n\r\nconst AdminUsers = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [editModalVisible, setEditModalVisible] = useState(false);\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [search, setSearch] = useState('');\r\n  const [roleFilter, setRoleFilter] = useState('All');\r\n\r\n  // Fetch users\r\n  const fetchUsers = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await api.get('Users', {});\r\n      if (response.data && response.data.data) {\r\n        setUsers(response.data.data);\r\n      }\r\n    } catch (error) {\r\n      message.error('Failed to fetch users');\r\n      console.error('Error fetching users:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  // Handle user verification\r\n  const handleVerificationChange = async (verified) => {\r\n    try {\r\n      if (!currentUser) return;\r\n      \r\n      const response = await api.update('Users', {\r\n        _id: currentUser._id,\r\n        verified: verified\r\n      }, currentUser._id);\r\n      \r\n      if (response.success) {\r\n        message.success(`User ${verified ? 'verified' : 'unverified'} successfully`);\r\n        fetchUsers(); // Refresh the list\r\n      } else {\r\n        message.error('Failed to update user verification status');\r\n      }\r\n    } catch (error) {\r\n      message.error('An error occurred');\r\n      console.error('Error updating user:', error);\r\n    } finally {\r\n      setEditModalVisible(false);\r\n    }\r\n  };\r\n\r\n  // Open edit modal\r\n  const showEditModal = (user) => {\r\n    setCurrentUser(user);\r\n    setEditModalVisible(true);\r\n  };\r\n\r\n  // Filter users based on search and role\r\n  const filteredUsers = users.filter(user => {\r\n    const matchesSearch = search === '' || \r\n      user.name?.toLowerCase().includes(search.toLowerCase()) || \r\n      user.email?.toLowerCase().includes(search.toLowerCase());\r\n    \r\n    const matchesRole = roleFilter === 'All' || user.role === roleFilter;\r\n    \r\n    return matchesSearch && matchesRole;\r\n  });\r\n\r\n  // Table columns\r\n  const columns = [\r\n    {\r\n      title: 'Name',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n      render: (text, record) => (\r\n        <span>{text} {record.last_name || ''}</span>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Email',\r\n      dataIndex: 'email',\r\n      key: 'email',\r\n    },\r\n    {\r\n      title: 'Role',\r\n      dataIndex: 'role',\r\n      key: 'role',\r\n      render: role => (\r\n        <Tag color={role === 'Brand' ? 'blue' : role === 'Creator' ? 'green' : 'purple'}>\r\n          {role}\r\n        </Tag>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Status',\r\n      key: 'verified',\r\n      dataIndex: 'verified',\r\n      render: (verified) => (\r\n        <Tag color={verified ? 'green' : 'red'}>\r\n          {verified ? 'Verified' : 'Unverified'}\r\n        </Tag>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Action',\r\n      key: 'action',\r\n      render: (text, record) => (\r\n        <Space size=\"middle\">\r\n          <Button \r\n            type=\"primary\" \r\n            icon={<EditOutlined />} \r\n            size=\"small\" \r\n            onClick={() => showEditModal(record)}\r\n          >\r\n            Edit\r\n          </Button>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"admin-users\">\r\n      <h2>User Management</h2>\r\n\r\n      {/* Filters */}\r\n      <div style={{ marginBottom: 16, display: 'flex', gap: 16 }}>\r\n        <Input\r\n          placeholder=\"Search by name or email\"\r\n          prefix={<SearchOutlined />}\r\n          value={search}\r\n          onChange={e => setSearch(e.target.value)}\r\n          style={{ width: 300 }}\r\n        />\r\n\r\n        <Select \r\n          defaultValue=\"All\" \r\n          style={{ width: 200 }} \r\n          onChange={value => setRoleFilter(value)}\r\n        >\r\n          <Option value=\"All\">All Roles</Option>\r\n          <Option value=\"Brand\">Brand</Option>\r\n          <Option value=\"Creator\">Creator</Option>\r\n          <Option value=\"Admin\">Admin</Option>\r\n        </Select>\r\n      </div>\r\n\r\n      <Table \r\n        columns={columns} \r\n        dataSource={filteredUsers} \r\n        rowKey=\"_id\"\r\n        loading={loading}\r\n      />\r\n\r\n      {/* Edit User Modal */}\r\n      <Modal\r\n        title=\"Edit User\"\r\n        visible={editModalVisible}\r\n        onCancel={() => setEditModalVisible(false)}\r\n        footer={[\r\n          <Button key=\"cancel\" onClick={() => setEditModalVisible(false)}>\r\n            Cancel\r\n          </Button>,\r\n        ]}\r\n      >\r\n        {currentUser && (\r\n          <div>\r\n            <p><strong>Name:</strong> {currentUser.name} {currentUser.last_name || ''}</p>\r\n            <p><strong>Email:</strong> {currentUser.email}</p>\r\n            <p><strong>Role:</strong> {currentUser.role}</p>\r\n            \r\n            <div style={{ marginTop: 20 }}>\r\n              <p><strong>Verification Status:</strong></p>\r\n              <div style={{ display: 'flex', justifyContent: 'space-between', marginTop: 10 }}>\r\n                <Button \r\n                  type={currentUser.verified ? \"primary\" : \"default\"}\r\n                  onClick={() => handleVerificationChange(true)}\r\n                >\r\n                  Verify User\r\n                </Button>\r\n                <Button \r\n                  type={!currentUser.verified ? \"primary\" : \"default\"}\r\n                  onClick={() => handleVerificationChange(false)}\r\n                  danger\r\n                >\r\n                  Unverify User\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminUsers;"],"sourceRoot":""}