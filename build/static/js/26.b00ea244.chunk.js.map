{"version":3,"sources":["../node_modules/lodash/isEqual.js","../node_modules/@ant-design/icons-svg/es/asn/DollarOutlined.js","../node_modules/@ant-design/icons/es/icons/DollarOutlined.js","views/app-views/admin-contracts/index.js"],"names":["baseIsEqual","require","module","exports","value","other","DollarOutlined","props","ref","React","AntdIcon","Object","assign","icon","DollarOutlinedSvg","displayName","Text","Typography","AdminContracts","_currentContract$camp","_currentContract$user","_currentContract$user2","contracts","setContracts","useState","loading","setLoading","paymentModalVisible","setPaymentModalVisible","currentContract","setCurrentContract","paymentNotes","setPaymentNotes","search","setSearch","paymentIdValue","setPaymentIdValue","fetchContracts","async","response","api","get","tabFilter","status","payment_status","$ne","data","error","message","console","useEffect","filteredContracts","filter","contract","_contract$campaign","_contract$campaign$ca","_contract$user","_contract$user$name","_contract$user2","_contract$user2$email","campaign","campaign_name","toLowerCase","includes","user","name","email","columns","title","dataIndex","key","render","id","_jsxs","copyable","children","substring","_","record","_record$user","_record$user2","_jsx","amount","concat","toFixed","_record$timeline","_completionEvent$data","completionEvent","timeline","find","event","_event$data","type","dateString","date","updatedAt","Date","toLocaleDateString","Tag","color","Space","size","Button","onClick","disabled","className","style","marginBottom","Input","placeholder","prefix","SearchOutlined","onChange","e","target","width","Table","dataSource","rowKey","Modal","visible","onCancel","onOk","paymentData","contract_id","_id","payment_reference_id","payment_notes","description","user_id","paymentResponse","save","success","update","payment_id","payment_date","okText","okButtonProps","CheckCircleOutlined","trim","marginTop","display","Tooltip","InfoCircleOutlined","marginLeft","required","TextArea","rows"],"mappings":"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","file":"static/js/26.b00ea244.chunk.js","sourcesContent":["var baseIsEqual = require('./_baseIsEqual');\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;\n","// This icon file is generated automatically.\nvar DollarOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372zm47.7-395.2l-25.4-5.9V348.6c38 5.2 61.5 29 65.5 58.2.5 4 3.9 6.9 7.9 6.9h44.9c4.7 0 8.4-4.1 8-8.8-6.1-62.3-57.4-102.3-125.9-109.2V263c0-4.4-3.6-8-8-8h-28.1c-4.4 0-8 3.6-8 8v33c-70.8 6.9-126.2 46-126.2 119 0 67.6 49.8 100.2 102.1 112.7l24.7 6.3v142.7c-44.2-5.9-69-29.5-74.1-61.3-.6-3.8-4-6.6-7.9-6.6H363c-4.7 0-8.4 4-8 8.7 4.5 55 46.2 105.6 135.2 112.1V761c0 4.4 3.6 8 8 8h28.4c4.4 0 8-3.6 8-8.1l-.2-31.7c78.3-6.9 134.3-48.8 134.3-124-.1-69.4-44.2-100.4-109-116.4zm-68.6-16.2c-5.6-1.6-10.3-3.1-15-5-33.8-12.2-49.5-31.9-49.5-57.3 0-36.3 27.5-57 64.5-61.7v124zM534.3 677V543.3c3.1.9 5.9 1.6 8.8 2.2 47.3 14.4 63.2 34.4 63.2 65.1 0 39.1-29.4 62.6-72 66.4z\" } }] }, \"name\": \"dollar\", \"theme\": \"outlined\" };\nexport default DollarOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport DollarOutlinedSvg from \"@ant-design/icons-svg/es/asn/DollarOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar DollarOutlined = function DollarOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: DollarOutlinedSvg\n  }));\n};\n\nDollarOutlined.displayName = 'DollarOutlined';\nexport default /*#__PURE__*/React.forwardRef(DollarOutlined);","import React, { useState, useEffect } from 'react';\r\nimport { Table, Tag, Space, Button, Modal, Input, message, Tooltip, Typography } from 'antd';\r\nimport { DollarOutlined, CheckCircleOutlined, SearchOutlined, InfoCircleOutlined } from '@ant-design/icons';\r\nimport { api } from 'auth/FetchInterceptor';\r\n\r\nconst { Text } = Typography;\r\n\r\nconst AdminContracts = () => {\r\n  const [contracts, setContracts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [paymentModalVisible, setPaymentModalVisible] = useState(false);\r\n  const [currentContract, setCurrentContract] = useState(null);\r\n  const [paymentNotes, setPaymentNotes] = useState('');\r\n  const [search, setSearch] = useState('');\r\n  const [paymentIdValue, setPaymentIdValue] = useState('');\r\n\r\n  // Fetch contracts\r\n  const fetchContracts = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await api.get('Contracts', {\r\n        tabFilter: { \r\n          status: 'Completed',\r\n          payment_status: { $ne: 'Paid' } // Fetch contracts that aren't marked as paid\r\n        }\r\n      });\r\n      \r\n      if (response.data && response.data.data) {\r\n        setContracts(response.data.data);\r\n      }\r\n    } catch (error) {\r\n      message.error('Failed to fetch contracts');\r\n      console.error('Error fetching contracts:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchContracts();\r\n  }, []);\r\n\r\n  // Open payment modal\r\n  const showPaymentModal = (contract) => {\r\n    setCurrentContract(contract);\r\n    setPaymentNotes('');\r\n    setPaymentIdValue('');\r\n    setPaymentModalVisible(true);\r\n  };\r\n\r\n  // Handle payment confirmation\r\n  const handlePaymentConfirmation = async () => {\r\n    try {\r\n      if (!currentContract) return;\r\n      \r\n      const paymentData = {\r\n        contract_id: currentContract._id,\r\n        payment_reference_id: paymentIdValue,\r\n        payment_notes: paymentNotes,\r\n        amount: currentContract.amount,\r\n        status: 'Completed',\r\n        description: `Payment for contract #${currentContract._id}`,\r\n        user_id: currentContract.user_id\r\n      };\r\n      \r\n      // Create payment record\r\n      const paymentResponse = await api.save('Payments', paymentData);\r\n      \r\n      if (paymentResponse.success) {\r\n        // Update contract with payment status\r\n        const contractUpdateResponse = await api.update('Contracts', {\r\n          _id: currentContract._id,\r\n          payment_status: 'Paid',\r\n          payment_id: paymentResponse.data._id,\r\n          payment_date: new Date(),\r\n          payment_notes: paymentNotes,\r\n          payment_reference_id: paymentIdValue\r\n        }, currentContract._id);\r\n        \r\n        if (contractUpdateResponse.success) {\r\n          message.success('Payment marked as processed successfully');\r\n          setPaymentModalVisible(false);\r\n          fetchContracts(); // Refresh the list\r\n        } else {\r\n          message.error('Failed to update contract payment status');\r\n        }\r\n      } else {\r\n        message.error('Failed to create payment record');\r\n      }\r\n    } catch (error) {\r\n      message.error('An error occurred while processing payment');\r\n      console.error('Error processing payment:', error);\r\n    }\r\n  };\r\n\r\n  // Filter contracts based on search\r\n  const filteredContracts = contracts.filter(contract => {\r\n    return search === '' || \r\n      contract.campaign?.campaign_name?.toLowerCase().includes(search.toLowerCase()) || \r\n      contract.user?.name?.toLowerCase().includes(search.toLowerCase()) ||\r\n      contract.user?.email?.toLowerCase().includes(search.toLowerCase());\r\n  });\r\n\r\n  // Format date\r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return 'N/A';\r\n    return new Date(dateString).toLocaleDateString();\r\n  };\r\n\r\n  // Table columns\r\n  const columns = [\r\n    {\r\n      title: 'Contract ID',\r\n      dataIndex: '_id',\r\n      key: '_id',\r\n      render: (id) => <Text copyable>{id.substring(0, 8)}...</Text>,\r\n    },\r\n    {\r\n      title: 'Campaign',\r\n      dataIndex: 'campaign',\r\n      key: 'campaign',\r\n      render: (campaign) => campaign?.campaign_name || 'N/A',\r\n    },\r\n    {\r\n      title: 'Creator',\r\n      key: 'creator',\r\n      render: (_, record) => (\r\n        <span>\r\n          {record.user?.name || 'Unknown'} \r\n          <br />\r\n          <small>{record.user?.email || ''}</small>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Amount',\r\n      dataIndex: 'amount',\r\n      key: 'amount',\r\n      render: (amount) => `$${amount.toFixed(2)}`,\r\n    },\r\n    {\r\n      title: 'Completion Date',\r\n      key: 'completionDate',\r\n      render: (_, record) => {\r\n        // Find the completion date from the timeline\r\n        const completionEvent = record.timeline?.find(event => \r\n          event.type === 'project_completed' || event.data?.status === 'Completed'\r\n        );\r\n        return formatDate(completionEvent?.data?.date || record.updatedAt);\r\n      },\r\n    },\r\n    {\r\n      title: 'Payment Status',\r\n      key: 'payment_status',\r\n      render: (_, record) => (\r\n        <Tag color={record.payment_status === 'Paid' ? 'green' : 'volcano'}>\r\n          {record.payment_status || 'Pending'}\r\n        </Tag>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Action',\r\n      key: 'action',\r\n      render: (_, record) => (\r\n        <Space size=\"middle\">\r\n          <Button \r\n            type=\"primary\" \r\n            icon={<DollarOutlined />} \r\n            onClick={() => showPaymentModal(record)}\r\n            disabled={record.payment_status === 'Paid'}\r\n          >\r\n            Process Payment\r\n          </Button>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"admin-contracts\">\r\n      <h2>Contract Payment Management</h2>\r\n      \r\n      <div style={{ marginBottom: 16 }}>\r\n        <Input\r\n          placeholder=\"Search campaigns or creators\"\r\n          prefix={<SearchOutlined />}\r\n          value={search}\r\n          onChange={e => setSearch(e.target.value)}\r\n          style={{ width: 300 }}\r\n        />\r\n      </div>\r\n      \r\n      <Table \r\n        columns={columns} \r\n        dataSource={filteredContracts} \r\n        rowKey=\"_id\"\r\n        loading={loading}\r\n      />\r\n\r\n      {/* Payment Processing Modal */}\r\n      <Modal\r\n        title=\"Process Payment\"\r\n        visible={paymentModalVisible}\r\n        onCancel={() => setPaymentModalVisible(false)}\r\n        onOk={handlePaymentConfirmation}\r\n        okText=\"Confirm Payment\"\r\n        okButtonProps={{ \r\n          icon: <CheckCircleOutlined />,\r\n          disabled: !paymentIdValue.trim()\r\n        }}\r\n      >\r\n        {currentContract && (\r\n          <div>\r\n            <p><strong>Campaign:</strong> {currentContract.campaign?.campaign_name || 'N/A'}</p>\r\n            <p><strong>Creator:</strong> {currentContract.user?.name || 'Unknown'}</p>\r\n            <p><strong>Email:</strong> {currentContract.user?.email || 'N/A'}</p>\r\n            <p><strong>Amount to Pay:</strong> ${currentContract.amount.toFixed(2)}</p>\r\n            \r\n            <div style={{ marginTop: 20 }}>\r\n              <div style={{ marginBottom: 16 }}>\r\n                <label style={{ display: 'block', marginBottom: 8 }}>\r\n                  Payment Reference ID:\r\n                  <Tooltip title=\"Enter the transaction ID from your payment system\">\r\n                    <InfoCircleOutlined style={{ marginLeft: 8 }} />\r\n                  </Tooltip>\r\n                </label>\r\n                <Input \r\n                  placeholder=\"Transaction ID / Reference Number\" \r\n                  value={paymentIdValue}\r\n                  onChange={e => setPaymentIdValue(e.target.value)}\r\n                  required\r\n                />\r\n              </div>\r\n              \r\n              <div>\r\n                <label style={{ display: 'block', marginBottom: 8 }}>Payment Notes (optional):</label>\r\n                <Input.TextArea \r\n                  rows={4}\r\n                  placeholder=\"Enter any additional payment details\" \r\n                  value={paymentNotes}\r\n                  onChange={e => setPaymentNotes(e.target.value)}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminContracts;"],"sourceRoot":""}